{"version":3,"file":"dicty-components-page-editor.cjs.development.js","sources":["../src/components/buttons/MarkButton.tsx","../src/components/buttons/BlockButton.tsx","../src/components/icons/BoldIcon.tsx","../src/components/icons/ItalicIcon.tsx","../src/components/icons/StrikethroughIcon.tsx","../src/components/icons/SubscriptIcon.tsx","../src/components/icons/SuperscriptIcon.tsx","../src/components/icons/UnderlinedIcon.tsx","../src/components/icons/AlignLeftIcon.tsx","../src/components/icons/AlignCenterIcon.tsx","../src/components/icons/AlignRightIcon.tsx","../src/components/icons/AlignJustifyIcon.tsx","../src/components/icons/H1Icon.tsx","../src/components/icons/H2Icon.tsx","../src/components/icons/H3Icon.tsx","../src/components/Toolbar.tsx","../src/components/Element.tsx","../src/components/Leaf.tsx","../src/components/plugins/withAlignment.tsx","../src/components/PageEditor.tsx"],"sourcesContent":["import React, { MouseEvent } from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate, ReactEditor } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\n/**\n * isMarkActive determines if the current text selection contains an\n * active mark\n */\nconst isMarkActive = (editor: ReactEditor, format: string) => {\n  // get a list of marks from the selected text\n  const marks = Editor.marks(editor)\n\n  // if there are marks for specified format then the mark is active\n  if (marks && marks[format]) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n * toggleMark will either remove or add a mark to the given text selection\n */\nconst toggleMark = (editor: ReactEditor, format: string) => {\n  // first find if the selection's mark is currently active\n  const isActive = isMarkActive(editor, format)\n\n  // we either want to add or remove a mark based on whether it is currently active\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\ntype Props = {\n  /** Type of mark (i.e. \"bold\") */\n  format: string\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * MarkButton displays a button with associated click logic for toggling a mark.\n */\nconst MarkButton = ({ format, icon }: Props) => {\n  const editor = useSlate()\n\n  // when button is clicked, toggle the mark within the editor\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    toggleMark(editor, format)\n  }\n\n  return (\n    <IconButton size=\"small\" onClick={handleClick}>\n      {icon}\n    </IconButton>\n  )\n}\n\nexport default MarkButton\n","import React, { MouseEvent } from \"react\"\nimport { Editor, Transforms, Element as SlateElement } from \"slate\"\nimport { useSlate, ReactEditor } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\n/**\n * PROCESS:\n *\n * 1. User clicks button\n * 2. We run generator function to find any matching nodes for that block type.\n * 3. If there are no matches (value == undefined) then the generator is done\n *    and we do not mark that block as active.\n * 4. If the block is not active, then we set the nodes to match that format type.\n * 5. If the generator does find a match, we mark that block as active for the\n *    first matching node.\n * 6. If the block is active, then we set the nodes back to the default type of\n *    'paragraph'.\n */\n\n/**\n * isBlockActive determines if the current text selection contains an active block\n */\nconst isBlockActive = (editor: ReactEditor, format: string) => {\n  // Editor.nodes returns a generator that iterates through all of the editor's\n  // nodes. We are looking for matches for the selected format.\n  // https://github.com/ianstormtaylor/slate/blob/master/packages/slate/src/interfaces/node.ts#L467\n  const nodeGenerator = Editor.nodes(editor, {\n    match: (n) =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n  })\n\n  // run the generator to find the nearest match\n  // then return true if this is the last value\n  const node = nodeGenerator.next()\n  while (!node.done) {\n    return true\n  }\n  return false\n}\n\n/**\n * toggleBlock will set the appropriate nodes for the given selection\n */\nconst toggleBlock = (\n  editor: ReactEditor,\n  format: string,\n  align: string = \"left\",\n) => {\n  // first find if the selected block is currently active\n  const isActive = isBlockActive(editor, format)\n\n  // Transforms provides helper functions to interact with the document.\n  // setNodes is used to set properties at the specified location.\n  // Here we are setting the type as paragraph if the block is active for the\n  // given format, otherwise we set it as the format.\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : format,\n    alignment: isActive ? \"left\" : align,\n  })\n}\n\n// Transforms.setNodes(editor, { alignment: 'right' }, { match: n => n.type === 'paragraph' });\n\ntype Props = {\n  /** Type of block (i.e. \"h1\") */\n  format: string\n  /** Icon to display in button */\n  icon: JSX.Element\n  /** Property used for text alignment */\n  align?: string\n}\n\n/**\n * BlockButton displays a button with associated click logic for toggling a block.\n */\nconst BlockButton = ({ format, icon, align }: Props) => {\n  const editor = useSlate()\n\n  // when button is clicked, toggle the block within the editor\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    toggleBlock(editor, format, align)\n  }\n\n  return (\n    <IconButton size=\"small\" onClick={handleClick}>\n      {icon}\n    </IconButton>\n  )\n}\n\nexport default BlockButton\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst BoldIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default BoldIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst ItalicIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n    </SvgIcon>\n  )\n}\n\nexport default ItalicIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst StrikethroughIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default StrikethroughIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SubscriptIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M22,18h-2v1h3v1h-4v-2c0-0.55,0.45-1,1-1h2v-1h-3v-1h3c0.55,0,1,0.45,1,1v1C23,17.55,22.55,18,22,18z M5.88,18h2.66 l3.4-5.42h0.12l3.4,5.42h2.66l-4.65-7.27L17.81,4h-2.68l-3.07,4.99h-0.12L8.85,4H6.19l4.32,6.73L5.88,18z\" />\n    </SvgIcon>\n  )\n}\n\nexport default SubscriptIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SuperscriptIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M22,7h-2v1h3v1h-4V7c0-0.55,0.45-1,1-1h2V5h-3V4h3c0.55,0,1,0.45,1,1v1C23,6.55,22.55,7,22,7z M5.88,20h2.66l3.4-5.42h0.12 l3.4,5.42h2.66l-4.65-7.27L17.81,6h-2.68l-3.07,4.99h-0.12L8.85,6H6.19l4.32,6.73L5.88,20z\" />\n    </SvgIcon>\n  )\n}\n\nexport default SuperscriptIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst UnderlinedIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default UnderlinedIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignLeftIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignLeftIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignCenterIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignCenterIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignRightIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignRightIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignJustifyIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignJustifyIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst H1Icon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14h-2V9h-2V7h4v10z\" />\n    </SvgIcon>\n  )\n}\n\nexport default H1Icon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst H2Icon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8c0 1.11-.9 2-2 2h-2v2h4v2H9v-4c0-1.11.9-2 2-2h2V9H9V7h4c1.1 0 2 .89 2 2v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default H2Icon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst H3Icon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M.01 0h24v24h-24z\" fill=\"none\" />\n      <path d=\"M19.01 3h-14c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 7.5c0 .83-.67 1.5-1.5 1.5.83 0 1.5.67 1.5 1.5V15c0 1.11-.9 2-2 2h-4v-2h4v-2h-2v-2h2V9h-4V7h4c1.1 0 2 .89 2 2v1.5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default H3Icon\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Divider from \"@material-ui/core/Divider\"\nimport MarkButton from \"./buttons/MarkButton\"\nimport BlockButton from \"./buttons/BlockButton\"\n// mark icons\nimport BoldIcon from \"./icons/BoldIcon\"\nimport ItalicIcon from \"./icons/ItalicIcon\"\nimport StrikethroughIcon from \"./icons/StrikethroughIcon\"\nimport SubscriptIcon from \"./icons/SubscriptIcon\"\nimport SuperscriptIcon from \"./icons/SuperscriptIcon\"\nimport UnderlinedIcon from \"./icons/UnderlinedIcon\"\n// block icons\nimport AlignLeftIcon from \"./icons/AlignLeftIcon\"\nimport AlignCenterIcon from \"./icons/AlignCenterIcon\"\nimport AlignRightIcon from \"./icons/AlignRightIcon\"\nimport AlignJustifyIcon from \"./icons/AlignJustifyIcon\"\nimport H1Icon from \"./icons/H1Icon\"\nimport H2Icon from \"./icons/H2Icon\"\nimport H3Icon from \"./icons/H3Icon\"\n\nconst useStyles = makeStyles({\n  divider: {\n    marginLeft: \"4px\",\n    marginRight: \"4px\",\n  },\n})\n\n/**\n * Toolbar is the display for the editor toolbar.\n */\nconst EditorToolbar = () => {\n  const classes = useStyles()\n\n  return (\n    <AppBar color=\"default\" position=\"static\">\n      <Toolbar disableGutters variant=\"dense\">\n        <MarkButton format=\"bold\" icon={<BoldIcon />} />\n        <MarkButton format=\"italic\" icon={<ItalicIcon />} />\n        <MarkButton format=\"underline\" icon={<UnderlinedIcon />} />\n        <MarkButton format=\"strikethrough\" icon={<StrikethroughIcon />} />\n        <MarkButton format=\"subscript\" icon={<SubscriptIcon />} />\n        <MarkButton format=\"superscript\" icon={<SuperscriptIcon />} />\n        <Divider className={classes.divider} orientation=\"vertical\" flexItem />\n        <BlockButton format=\"h1\" icon={<H1Icon />} />\n        <BlockButton format=\"h2\" icon={<H2Icon />} />\n        <BlockButton format=\"h3\" icon={<H3Icon />} />\n        <Divider className={classes.divider} orientation=\"vertical\" flexItem />\n        <BlockButton format=\"align\" align=\"left\" icon={<AlignLeftIcon />} />\n        <BlockButton format=\"align\" align=\"center\" icon={<AlignCenterIcon />} />\n        <BlockButton format=\"align\" align=\"right\" icon={<AlignRightIcon />} />\n        <BlockButton\n          format=\"align\"\n          align=\"justify\"\n          icon={<AlignJustifyIcon />}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default EditorToolbar\n","import React from \"react\"\nimport { RenderElementProps } from \"slate-react\"\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\"\n\ninterface ElementProps extends RenderElementProps {\n  element: {\n    align?: TypographyProps[\"align\"]\n    children: any\n    type: {\n      align?: boolean\n      h1?: boolean\n      h2?: boolean\n      h3?: boolean\n    }\n  }\n}\n\n/**\n * Element is used to render blocks based on a given type.\n */\nconst Element = ({ attributes, children, element }: ElementProps) => {\n  const { align, type } = element\n\n  switch (type) {\n    case \"align\":\n      return (\n        <Typography\n          component=\"span\"\n          variant=\"inherit\"\n          align={align}\n          {...attributes}>\n          {children}\n        </Typography>\n      )\n    case \"h1\":\n      return (\n        <Typography variant=\"h1\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    case \"h2\":\n      return (\n        <Typography variant=\"h2\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    case \"h3\":\n      return (\n        <Typography variant=\"h3\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    default:\n      return (\n        <Typography component=\"p\" align={align} variant=\"body1\" {...attributes}>\n          {children}\n        </Typography>\n      )\n  }\n}\n\nexport default Element\n","import React from \"react\"\nimport { RenderLeafProps } from \"slate-react\"\n\n/**\n * Leaf is used to render text based on a given style.\n *\n * We need to use standard if conditionals and not if/else if because\n * a leaf can have multiple matching properties. If a leaf is both bold\n * and italic, for example, then ultimately this component would render:\n *\n * <span {...attributes}><strong><em>{children}</em></strong></span>\n */\nconst Leaf = ({ attributes, children, leaf }: RenderLeafProps) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  if (leaf.strikethrough) {\n    children = <s>{children}</s>\n  }\n\n  if (leaf.subscript) {\n    children = <sub>{children}</sub>\n  }\n\n  if (leaf.superscript) {\n    children = <sup>{children}</sup>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nexport default Leaf\n","import { Editor, Transforms } from \"slate\"\n\nconst withAlignment = (editor: Editor) => {\n  const { normalizeNode } = editor\n\n  editor.normalizeNode = (match) => {\n    const [node, path] = match\n    // every node needs a standard alignment of 'left'\n    if (!node.alignment) {\n      Transforms.setNodes(editor, { alignment: \"left\" }, { at: path })\n      return\n    }\n    normalizeNode(match)\n  }\n\n  return editor\n}\n\nexport default withAlignment\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { createEditor, Node } from \"slate\"\nimport { Slate, Editable, withReact } from \"slate-react\"\nimport Toolbar from \"./Toolbar\"\nimport Element from \"./Element\"\nimport Leaf from \"./Leaf\"\nimport withAlignment from \"./plugins/withAlignment\"\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [{ text: \"A line of text in a paragraph.\" }],\n  },\n]\n\n/**\n * PageEditor is the main editor component.\n */\nconst PageEditor = () => {\n  // create a slate editor object that won't change across renders\n  const editor = useMemo(() => withReact(withAlignment(createEditor())), [])\n  // store the value of the editor\n  const [value, setValue] = useState<Node[]>(initialValue)\n  // render expected element based on type passed as props\n  // memoize this function for subsequent renders\n  const renderElement = useCallback((props) => <Element {...props} />, [])\n  // render expected leaf based on type (i.e. bold, italic, etc)\n  const renderLeaf = useCallback((props) => <Leaf {...props} />, [])\n\n  return (\n    <Slate editor={editor} value={value} onChange={(value) => setValue(value)}>\n      <Toolbar />\n      <Editable renderElement={renderElement} renderLeaf={renderLeaf} />\n    </Slate>\n  )\n}\n\nexport default PageEditor\n"],"names":["isMarkActive","editor","format","marks","Editor","toggleMark","isActive","removeMark","addMark","MarkButton","icon","useSlate","handleClick","event","preventDefault","React","IconButton","size","onClick","isBlockActive","nodeGenerator","nodes","match","n","isEditor","SlateElement","isElement","type","node","next","done","toggleBlock","align","Transforms","setNodes","alignment","BlockButton","BoldIcon","SvgIcon","d","fill","ItalicIcon","StrikethroughIcon","SubscriptIcon","SuperscriptIcon","UnderlinedIcon","AlignLeftIcon","AlignCenterIcon","AlignRightIcon","AlignJustifyIcon","H1Icon","H2Icon","H3Icon","useStyles","makeStyles","divider","marginLeft","marginRight","EditorToolbar","classes","AppBar","color","position","Toolbar","disableGutters","variant","Divider","className","orientation","flexItem","Element","attributes","children","element","Typography","component","Leaf","leaf","bold","italic","underline","strikethrough","subscript","superscript","withAlignment","normalizeNode","path","at","initialValue","text","PageEditor","useMemo","withReact","createEditor","useState","value","setValue","renderElement","useCallback","props","renderLeaf","Slate","onChange","Editable"],"mappings":"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"}
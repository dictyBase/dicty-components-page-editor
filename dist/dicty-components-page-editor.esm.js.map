{"version":3,"file":"dicty-components-page-editor.esm.js","sources":["../src/styles/buttons.ts","../src/components/buttons/MarkButton.tsx","../src/constants/types.ts","../src/utils/blocks.ts","../src/components/buttons/BlockButton.tsx","../src/components/buttons/AlignButton.tsx","../src/styles/dialog.ts","../src/components/dialogs/LinkDialog.tsx","../src/utils/links.ts","../src/hooks/useLinks.ts","../src/components/buttons/LinkButton.tsx","../src/hooks/useAnchorElement.ts","../src/components/buttons/AutolinkIDsButton.tsx","../src/components/dropdowns/ColorPicker.tsx","../src/utils/getCurrentMark.ts","../src/components/buttons/FontColorButton.tsx","../src/components/icons/CheckIcon.tsx","../src/utils/dropdownValues.ts","../src/utils/getParentNode.ts","../src/components/buttons/LineSpacingButton.tsx","../src/components/dialogs/ImageDialog.tsx","../src/components/buttons/ImageButton.tsx","../src/components/dialogs/VideoDialog.tsx","../src/utils/getVideoID.ts","../src/components/buttons/VideoButton.tsx","../src/components/icons/ScientificSymbolIcon.tsx","../src/components/buttons/ScientificSymbolsButton.tsx","../src/components/icons/BoldIcon.tsx","../src/components/icons/ItalicIcon.tsx","../src/components/icons/StrikethroughIcon.tsx","../src/components/icons/SubscriptIcon.tsx","../src/components/icons/SuperscriptIcon.tsx","../src/components/icons/UnderlinedIcon.tsx","../src/components/icons/H1Icon.tsx","../src/components/icons/H2Icon.tsx","../src/components/icons/H3Icon.tsx","../src/components/icons/LinkIcon.tsx","../src/components/icons/DividerIcon.tsx","../src/components/icons/LineSpacingIcon.tsx","../src/components/icons/ImageIcon.tsx","../src/components/icons/VideoIcon.tsx","../src/components/icons/UnorderedListIcon.tsx","../src/components/icons/OrderedListIcon.tsx","../src/components/icons/IndentIncreaseIcon.tsx","../src/components/icons/IndentDecreaseIcon.tsx","../src/components/icons/AlignLeftIcon.tsx","../src/components/icons/AlignCenterIcon.tsx","../src/components/icons/AlignRightIcon.tsx","../src/components/icons/AlignJustifyIcon.tsx","../src/components/dropdowns/Dropdown.tsx","../src/components/icons/FontColorIcon.tsx","../src/utils/lists.ts","../src/plugins/withLists.ts","../src/components/icons/TableIcon.tsx","../src/components/icons/TableInsertColumnIcon.tsx","../src/components/icons/TableInsertRowIcon.tsx","../src/components/icons/TableDeleteColumnIcon.tsx","../src/components/icons/TableDeleteRowIcon.tsx","../src/components/icons/DeleteIcon.tsx","../src/utils/tables.ts","../src/components/buttons/TableButtons.tsx","../src/components/Separator.tsx","../src/components/Toolbar.tsx","../src/components/InlineToolbar.tsx","../src/styles/media.ts","../src/components/Image.tsx","../src/components/Video.tsx","../src/components/Element.tsx","../src/utils/getFontSize.ts","../src/components/Leaf.tsx","../src/utils/deserialize.ts","../src/plugins/withHTML.ts","../src/plugins/withLinks.ts","../src/plugins/withMedia.ts","../src/plugins/withNormalize.ts","../src/utils/onKeyDown.ts","../src/utils/migration.js","../src/styles/theme.ts","../src/components/PageEditor.tsx"],"sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\"\n\ntype StyleProps = {\n  active: boolean | unknown\n}\n\nconst useStyles = makeStyles(() => ({\n  button: (props?: StyleProps) => ({\n    color: props?.active ? \"#000\" : \"rgba(0, 0, 0, 0.54)\",\n  }),\n}))\n\nexport default useStyles\n","import React, { MouseEvent } from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { CustomEditor } from \"../../types/editor\"\nimport useStyles from \"../../styles/buttons\"\n\n/**\n * isMarkActive determines if the current text selection contains an\n * active mark\n */\nconst isMarkActive = (editor: CustomEditor, format: string) => {\n  // get a list of marks from the selected text\n  const marks = Editor.marks(editor)\n\n  // if there are marks for specified format then the mark is active\n  if (marks && marks[format]) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n * toggleMark will either remove or add a mark to the given text selection\n */\nconst toggleMark = (editor: CustomEditor, format: string) => {\n  // first find if the selection's mark is currently active\n  const isActive = isMarkActive(editor, format)\n\n  // we either want to add or remove a mark based on whether it is currently active\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\ntype Props = {\n  /** Type of mark (i.e. \"bold\") */\n  format: string\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * MarkButton displays a button with associated click logic for toggling a mark.\n */\nconst MarkButton = ({ format, icon }: Props) => {\n  const editor = useSlate()\n  const props = {\n    active: isMarkActive(editor, format),\n  }\n  const classes = useStyles(props)\n\n  // when button is clicked, toggle the mark within the editor\n  const handleMouseDown = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    toggleMark(editor, format)\n  }\n\n  return (\n    <Tooltip title={format}>\n      <IconButton\n        className={classes.button}\n        size=\"small\"\n        aria-label={`${format}`}\n        onMouseDown={handleMouseDown}>\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default MarkButton\n","const types = {\n  // marks\n  bold: \"bold\",\n  italic: \"italic\",\n  underline: \"underline\",\n  strikethrough: \"strikethrough\",\n  subscript: \"subscript\",\n  superscript: \"superscript\",\n  // inline\n  link: \"link\",\n  // blocks\n  paragraph: \"paragraph\",\n  h1: \"h1\",\n  h2: \"h2\",\n  h3: \"h3\",\n  divider: \"divider\",\n  lineSpacing: \"lineSpacing\",\n  image: \"image\",\n  video: \"video\",\n  orderedList: \"orderedList\",\n  unorderedList: \"unorderedList\",\n  listItem: \"listItem\",\n  indentDecrease: \"indentDecrease\",\n  indentIncrease: \"indentIncrease\",\n  tableWrap: \"tableWrap\",\n  table: \"table\",\n  tableRow: \"tableRow\",\n  tableColumn: \"tableColumn\",\n  tableCell: \"tableCell\",\n  tableDelete: \"tableDelete\",\n  tableRowDelete: \"tableRowDelete\",\n  tableColumnDelete: \"tableColumnDelete\",\n}\n\nconst alignments = {\n  left: \"left\",\n  center: \"center\",\n  right: \"right\",\n  justify: \"justify\",\n}\n\nconst attributes = {\n  borderColor: \"borderColor\",\n  fontColor: \"fontColor\",\n}\n\nexport { types, alignments, attributes }\n","import { Editor, Transforms, Element as SlateElement } from \"slate\"\nimport { types } from \"../constants/types\"\n\n/**\n * isBlockActive determines if the current text selection contains an active block\n */\nconst isBlockActive = (editor: Editor, property: string, value: string) => {\n  // convert nodes iterator to array and get first result\n  const [match] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) =>\n        !Editor.isEditor(n) &&\n        SlateElement.isElement(n) &&\n        n[property] === value,\n    }),\n  )\n  // return boolean to indicate if match was found\n  return !!match\n}\n\n/**\n * toggleBlock will set the appropriate nodes for the given selection\n */\nconst toggleBlock = (editor: Editor, format: string) => {\n  // first find if the selected block is currently active\n  const isActive = isBlockActive(editor, \"type\", format)\n\n  // setNodes is used to set properties at the currently selected element.\n  // If the block is active, then we want to toggle it back to the default\n  // paragraph type. If the block is not active, we toggle the type to match it.\n  Transforms.setNodes(editor, {\n    type: isActive ? types.paragraph : format,\n  })\n}\n\nexport { isBlockActive, toggleBlock }\n","import React, { MouseEvent } from \"react\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { isBlockActive } from \"../../utils/blocks\"\nimport useStyles from \"../../styles/buttons\"\n\n/**\n * PROCESS:\n *\n * 1. User clicks button\n * 2. Use generator function to find any matching nodes for that block type.\n * 3. If there are no matches then we do not mark that block as active.\n * 4. If the block is not active, then we set the nodes to match that format type.\n * 5. If there is a match, we mark that block as active for the first matching node.\n * 6. If the block is active, then we set the nodes back to the default type of\n *    'paragraph'.\n */\n\ntype Props = {\n  /** Type of block (i.e. \"h1\") */\n  format: string\n  /** Icon to display in button */\n  icon: JSX.Element\n  /** Function to call when button is clicked */\n  clickFn: () => void\n}\n\n/**\n * BlockButton displays a button with associated click logic for toggling a\n * block.\n */\nconst BlockButton = ({ format, icon, clickFn }: Props) => {\n  const editor = useSlate()\n  const props = {\n    active: isBlockActive(editor, \"type\", format),\n  }\n  const classes = useStyles(props)\n\n  // when button is clicked, toggle the block within the editor\n  const handleMouseDown = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    clickFn()\n  }\n\n  return (\n    <Tooltip title={format}>\n      <IconButton\n        className={classes.button}\n        size=\"small\"\n        aria-label={format}\n        // use onMouseDown to avoid editor selection becoming null\n        // and losing cursor position\n        onMouseDown={handleMouseDown}>\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default BlockButton\n","import React, { MouseEvent } from \"react\"\nimport { Editor, Transforms } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport useStyles from \"../../styles/buttons\"\nimport { isBlockActive } from \"../../utils/blocks\"\n\nconst toggleAlign = (editor: Editor, align: string) => {\n  const isActive = isBlockActive(editor, \"align\", align)\n\n  Transforms.setNodes(editor, {\n    align: isActive ? \"left\" : align,\n  })\n}\n\ntype Props = {\n  /** Icon to display in button */\n  icon: JSX.Element\n  /** Text alignment property */\n  align: string\n}\n\n/**\n * AlignButton displays a button with associated logic for adding the \"align\"\n * attribute.\n */\nconst AlignButton = ({ icon, align }: Props) => {\n  const editor = useSlate()\n  const props = {\n    active: isBlockActive(editor, \"align\", align),\n  }\n  const classes = useStyles(props)\n\n  const handleMouseDown = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    toggleAlign(editor, align)\n  }\n\n  return (\n    <Tooltip title={align}>\n      <IconButton\n        className={classes.button}\n        size=\"small\"\n        aria-label={`align-${align}`}\n        onMouseDown={handleMouseDown}>\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default AlignButton\n","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    textTransform: \"none\",\n  },\n}))\n\nexport default useStyles\n","import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport useStyles from \"../../styles/dialog\"\nimport { LinkDialogProps } from \"../../types/dialog\"\n\nconst LinkDialog = ({\n  handleAddClick,\n  handleClose,\n  dialogOpen,\n  link,\n  setLink,\n}: LinkDialogProps) => {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      open={dialogOpen}\n      onClose={handleClose}\n      aria-labelledby=\"link-dialog-title\">\n      <DialogTitle id=\"link-dialog-title\">Link Details</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"url\"\n          label=\"URL\"\n          type=\"url\"\n          defaultValue={link.url}\n          onChange={(e) =>\n            setLink({\n              url: e.target.value,\n              text: link.text,\n            })\n          }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"text\"\n          label=\"Text\"\n          type=\"text\"\n          defaultValue={link.text ? link.text : \"\"}\n          onChange={(e) =>\n            setLink({\n              text: e.target.value,\n              url: link.url,\n            })\n          }\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.button}\n          onClick={handleAddClick}\n          variant=\"contained\"\n          color=\"primary\">\n          Add Link\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default LinkDialog\n","import { Editor, Element as SlateElement, Transforms, Range, Node } from \"slate\"\nimport { Link } from \"../types/link\"\nimport { types } from \"../constants/types\"\n\n// look for a match of the link type\nconst linkNodeOptions = {\n  match: (n: Node) =>\n    !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === types.link,\n}\n\nconst isLinkActive = (editor: Editor) => {\n  const [match] = Array.from(Editor.nodes(editor, linkNodeOptions))\n  return !!match\n}\n\n/**\n * upsertLink updates or adds a new link. If there is no selection,\n * it adds a new link with the provided text. Otherwise it will wrap the\n * selection with a link node using the user's link and text.\n */\nconst upsertLink = (editor: Editor, link: Link, fontColor: string) => {\n  const { url, text } = link\n  // check if there is an existing link first then unwrap it\n  if (isLinkActive(editor)) {\n    Transforms.unwrapNodes(editor, linkNodeOptions)\n  }\n\n  const linkData = {\n    type: types.link,\n    url,\n    children: [{ text: text, fontColor: fontColor }],\n  }\n\n  const { selection } = editor\n  const isCollapsed = selection && Range.isCollapsed(selection)\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, linkData)\n  } else {\n    Transforms.wrapNodes(editor, linkData, { split: true })\n    Editor.insertText(editor, text)\n    Transforms.collapse(editor, { edge: \"end\" })\n  }\n}\n\n// getLinkSelection gets the current text and URL for the user's current selection.\nconst getLinkSelection = (editor: Editor) => {\n  const { selection } = editor\n  let prevURL,\n    selectedText = \"\"\n  // if there is a current selection then pull the text and URL from it\n  // and update state accordingly\n  if (selection && !Range.isCollapsed(selection)) {\n    selectedText = Editor.string(editor, selection)\n    const [linkNode] = Array.from(Editor.nodes(editor, linkNodeOptions))\n    if (linkNode && SlateElement.isElement(linkNode[0])) {\n      prevURL = linkNode[0].url as string\n    }\n  }\n  return {\n    url: prevURL || \"\",\n    text: selectedText,\n  }\n}\n\nexport { linkNodeOptions, isLinkActive, upsertLink, getLinkSelection }\n","import React from \"react\"\nimport { useSlate } from \"slate-react\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport { upsertLink } from \"../utils/links\"\n\n// useLinks is a hook for internal link state logic.\nconst useLinks = () => {\n  const editor = useSlate()\n  const theme = useTheme()\n  const [linkDialogOpen, setLinkDialogOpen] = React.useState(false)\n  const [link, setLink] = React.useState({\n    url: \"\",\n    text: \"\",\n  })\n\n  const handleAddLink = () => {\n    upsertLink(editor, link, theme.palette.primary.main)\n    setLinkDialogOpen(false)\n  }\n\n  return {\n    link,\n    setLink,\n    linkDialogOpen,\n    setLinkDialogOpen,\n    handleAddLink,\n  }\n}\n\nexport default useLinks\n","import React from \"react\"\nimport { Transforms } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport LinkDialog from \"../dialogs/LinkDialog\"\nimport useLinks from \"../../hooks/useLinks\"\nimport { isLinkActive, getLinkSelection } from \"../../utils/links\"\nimport useStyles from \"../../styles/buttons\"\n\n// this is necessary to maintain editor selection when link dialog appears;\n// the deselect method unsets the editor selection\nTransforms.deselect = () => {}\n\ntype Props = {\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * LinkButton is a button specifically for adding links.\n */\nconst LinkButton = ({ icon }: Props) => {\n  const editor = useSlate()\n  const { link, setLink, linkDialogOpen, setLinkDialogOpen, handleAddLink } =\n    useLinks()\n  const props = {\n    active: isLinkActive(editor),\n  }\n  const classes = useStyles(props)\n\n  const handleMouseDown = () => {\n    const link = getLinkSelection(editor)\n    setLink(link)\n    setLinkDialogOpen(true)\n  }\n\n  // if the user has clicked away without adding the link then we don't need to do anything with their data\n  const handleClose = () => setLinkDialogOpen(false)\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"link\">\n        <IconButton\n          className={classes.button}\n          size=\"small\"\n          aria-label=\"link\"\n          onMouseDown={handleMouseDown}>\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <LinkDialog\n        handleAddClick={handleAddLink}\n        handleClose={handleClose}\n        dialogOpen={linkDialogOpen}\n        link={link}\n        setLink={setLink}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default LinkButton\n","import React from \"react\"\n\n// useAnchorElement contains state logic and associated functions for components\n// requiring an anchor element (i.e. dropdown menus, popovers)\nconst useAnchorElement = () => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = (_: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => {\n    if (reason === \"backdropClick\" || reason === \"escapeKeyDown\") {\n      setAnchorEl(null)\n    }\n  }\n\n  return {\n    anchorEl,\n    setAnchorEl,\n    handleMouseDown,\n    handleClose,\n  }\n}\n\nexport default useAnchorElement\n","import React from \"react\"\nimport { useSlate } from \"slate-react\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport useAnchorElement from \"../../hooks/useAnchorElement\"\nimport { getLinkSelection, upsertLink } from \"../../utils/links\"\n\nconst ids = {\n  pubmed: \"PubMed\",\n  go: \"GO\",\n  gene: \"Gene\",\n  strain: \"Strain\",\n  plasmid: \"Plasmid\",\n}\n\nconst idList = [ids.pubmed, ids.go, ids.gene, ids.strain, ids.plasmid]\n\nconst getURLPrefix = (item: string) => {\n  let prefix = \"\"\n  switch (item) {\n    case ids.pubmed:\n      prefix = \"/publication/\"\n      break\n    case ids.go:\n      prefix = \"https://www.ebi.ac.uk/QuickGO/term/\"\n      break\n    case ids.gene:\n      prefix = \"/gene/\"\n      break\n    case ids.strain:\n      prefix = \"/stockcenter/strains/\"\n      break\n    case ids.plasmid:\n      prefix = \"/stockcenter/plasmids/\"\n      break\n    default:\n      return prefix\n  }\n  return prefix\n}\n\nconst validateText = (item: string, text: string) => {\n  let valid = false\n  switch (item) {\n    case ids.pubmed:\n      // check if only numbers\n      valid = /^\\d+$/.test(text)\n      break\n    case ids.go:\n      valid = /GO:[0-9]+/.test(text)\n      break\n    case ids.gene:\n      valid = true\n      break\n    case ids.strain:\n      valid = /DBS[0-9]+/.test(text)\n      break\n    case ids.plasmid:\n      valid = /DBP[0-9]+/.test(text)\n      break\n    default:\n      return valid\n  }\n  return valid\n}\n\n/**\n * AutolinkIDsButton displays a button and dropdown for IDs that can be autolinked.\n */\nconst AutolinkIDsButton = () => {\n  const editor = useSlate()\n  const theme = useTheme()\n  const { anchorEl, setAnchorEl, handleMouseDown } = useAnchorElement()\n\n  const handleItemClick = (item: string) => {\n    let link = getLinkSelection(editor)\n    const prefix = getURLPrefix(item)\n    // if the selected text is not a valid ID then throw error\n    if (!validateText(item, link.text)) {\n      alert(`${link.text} is not a valid ID for ${item}`)\n      setAnchorEl(null)\n      return\n    }\n    // if selected link URL doesn't have a prefix then add it\n    if (!link.url.includes(prefix)) {\n      link.url = `${prefix}${link.text}`\n    }\n\n    upsertLink(editor, link, theme.palette.primary.main)\n    setAnchorEl(null)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"autolinked IDs\">\n        <IconButton\n          size=\"small\"\n          aria-label=\"autolinked IDs\"\n          aria-haspopup=\"true\"\n          onMouseDown={handleMouseDown}>\n          ID\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id=\"autolinked-ids-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        MenuListProps={{ disablePadding: true }}\n        onClose={() => setAnchorEl(null)}>\n        {idList.map((item: string, index: number) => {\n          return (\n            <MenuItem key={index} onClick={() => handleItemClick(item)}>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nexport { ids, getURLPrefix, validateText }\nexport default AutolinkIDsButton\n","import React from \"react\"\nimport { makeStyles, useTheme, Theme } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { HexColorPicker, HexColorInput } from \"react-colorful\"\n\n// get list of preset colors to show beneath picker\nconst getPresetColors = (theme: Theme) => {\n  const { palette } = theme\n  return [\n    palette.primary.main,\n    palette.secondary.main,\n    palette.error.main,\n    palette.warning.main,\n    palette.info.main,\n    palette.success.main,\n  ]\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  buttonContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  button: {\n    width: \"24px\",\n    height: \"24px\",\n    padding: \"0px\",\n    margin: theme.spacing(0.5),\n    cursor: \"pointer\",\n  },\n  input: {\n    width: \"90%\",\n    textTransform: \"uppercase\",\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: \"4px\",\n  },\n  popper: {\n    padding: theme.spacing(2),\n  },\n}))\n\ntype Props = {\n  /** Function to call when color is selected */\n  handleChange: (value: string) => void\n  /** Active color of current text selection */\n  activeColor: string\n}\n\n/**\n * ColorPicker handles the display of the color picker.\n */\nconst ColorPicker = ({ handleChange, activeColor }: Props) => {\n  const theme = useTheme()\n  const classes = useStyles()\n  const presetColors = getPresetColors(theme)\n\n  return (\n    <div className={classes.popper}>\n      <HexColorPicker color={activeColor} onChange={handleChange} />\n      <HexColorInput\n        className={classes.input}\n        color={activeColor}\n        onChange={handleChange}\n      />\n      <div className={classes.buttonContainer}>\n        {presetColors.map((color: string) => (\n          <IconButton\n            key={color}\n            className={classes.button}\n            style={{ backgroundColor: color }}\n            onClick={() => handleChange(color)}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ColorPicker\n","import { Editor } from \"slate\"\n\n// adds additional check so an inherited font size displays the default \"1rem\"\n// in the dropdown menu\nconst getMarkValue = (value: string) => {\n  if (value === \"inherit\") {\n    return \"1rem\"\n  }\n  return value\n}\n\n// get the current mark for a given selection\nconst getCurrentMark = (editor: Editor, mark: string) => {\n  const marks = Editor.marks(editor)\n  if (!marks || !marks[mark]) {\n    return\n  }\n  return getMarkValue(marks[mark])\n}\n\nexport default getCurrentMark\n","import React from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport Menu from \"@material-ui/core/Menu\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport ColorPicker from \"../dropdowns/ColorPicker\"\nimport useAnchorElement from \"../../hooks/useAnchorElement\"\nimport getCurrentMark from \"../../utils/getCurrentMark\"\nimport { attributes } from \"../../constants/types\"\n\ntype Props = {\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * FontColorButton displays a button with associated click logic for selecting\n * a font color.\n */\nconst FontColorButton = ({ icon }: Props) => {\n  const editor = useSlate()\n  const { anchorEl, handleClose, handleMouseDown } = useAnchorElement()\n\n  const handleChange = (value: string) => {\n    Editor.addMark(editor, attributes.fontColor, value)\n  }\n  const activeColor = getCurrentMark(editor, attributes.fontColor) as string\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"font color\">\n        <IconButton\n          size=\"small\"\n          aria-label=\"font color\"\n          aria-haspopup=\"true\"\n          onMouseDown={handleMouseDown}>\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id=\"font-color-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        MenuListProps={{ disablePadding: true }}\n        onClose={handleClose}>\n        <div>\n          <ColorPicker handleChange={handleChange} activeColor={activeColor} />\n        </div>\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nexport default FontColorButton\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst CheckIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default CheckIcon\n","const FontFamilyList = [\n  \"Lato\",\n  \"Merriweather\",\n  \"Montserrat\",\n  \"Roboto\",\n  \"Roboto Condensed\",\n  \"Roboto Mono\",\n  \"Roboto Slab\",\n]\n\nconst FontSizeList = [\n  \"0.8rem\",\n  \"0.9rem\",\n  \"1rem\",\n  \"1.1rem\",\n  \"1.2rem\",\n  \"1.3rem\",\n  \"1.4rem\",\n  \"1.5rem\",\n  \"1.8rem\",\n  \"2rem\",\n]\n\nconst LineSpacingList = [\"1.0\", \"1.2\", \"1.5\", \"2.0\", \"2.5\", \"3.0\"]\n\nexport { FontFamilyList, FontSizeList, LineSpacingList }\n","import { Editor, Path, Node } from \"slate\"\n\n// getParentNode is a helper function to get the parent node above the current selection.\nconst getParentNode = (editor: Editor) => {\n  if (!editor.selection) {\n    return\n  }\n\n  // need to get the parent path in order to get the parent node above this selection\n  const currentPath = editor.selection.anchor.path\n  const parentPath = Path.parent(currentPath)\n  const node = Node.get(editor, parentPath)\n\n  return node\n}\n\nexport default getParentNode\n","import React, { MouseEvent } from \"react\"\nimport { Element, Transforms } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport CheckIcon from \"../icons/CheckIcon\"\nimport { types } from \"../../constants/types\"\nimport { LineSpacingList } from \"../../utils/dropdownValues\"\nimport getParentNode from \"../../utils/getParentNode\"\n\nconst useStyles = makeStyles(() => ({\n  menuItem: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    width: \"75px\",\n  },\n  icon: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n}))\n\ntype Props = {\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * LineSpacingButton displays a button with associated click logic for selecting\n * line spacing.\n */\nconst LineSpacingButton = ({ icon }: Props) => {\n  const editor = useSlate()\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleItemClick = (item: string) => {\n    Transforms.setNodes(editor, {\n      type: types.lineSpacing,\n      lineSpacing: item,\n    })\n    setAnchorEl(null)\n  }\n\n  const handleMenuOpen = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"line spacing\">\n        <IconButton\n          size=\"small\"\n          aria-label=\"line spacing\"\n          aria-haspopup=\"true\"\n          onMouseDown={handleMenuOpen}>\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id=\"line-spacing-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        MenuListProps={{ disablePadding: true }}\n        onClose={() => setAnchorEl(null)}>\n        {LineSpacingList.map((item: string, index: number) => {\n          const parentNode = getParentNode(editor)\n          const currentLineSpacing =\n            (Element.isElement(parentNode) && parentNode.lineSpacing) || \"1.5\"\n          return (\n            <MenuItem\n              key={index}\n              onClick={() => handleItemClick(item)}\n              className={classes.menuItem}>\n              <IconButton size=\"small\" className={classes.icon}>\n                {currentLineSpacing === item && <CheckIcon />}\n              </IconButton>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nexport default LineSpacingButton\n","import React from \"react\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport useStyles from \"../../styles/dialog\"\nimport { ImageDialogProps } from \"../../types/dialog\"\n\nconst ImageDialog = ({\n  handleAddClick,\n  handleClose,\n  dialogOpen,\n  image,\n  setImage,\n}: ImageDialogProps) => {\n  const classes = useStyles()\n  const [checked, setChecked] = React.useState(false)\n\n  const handleCheckboxChange = () => {\n    setChecked(!checked)\n  }\n\n  return (\n    <Dialog\n      open={dialogOpen}\n      onClose={handleClose}\n      aria-labelledby=\"image-dialog-title\">\n      <DialogTitle id=\"image-dialog-title\">Image Details</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"url\"\n          label=\"URL\"\n          type=\"url\"\n          onChange={(e) =>\n            setImage({\n              ...image,\n              url: e.target.value,\n            })\n          }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"description\"\n          label=\"Description\"\n          type=\"text\"\n          onChange={(e) =>\n            setImage({\n              ...image,\n              description: e.target.value,\n            })\n          }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"width\"\n          label=\"Width (optional)\"\n          type=\"number\"\n          onChange={(e) =>\n            setImage({\n              ...image,\n              width: Number(e.target.value),\n            })\n          }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"height\"\n          label=\"Height (optional)\"\n          type=\"number\"\n          onChange={(e) =>\n            setImage({\n              ...image,\n              height: Number(e.target.value),\n            })\n          }\n          fullWidth\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={handleCheckboxChange}\n              color=\"primary\"\n              name=\"checkedA\"\n            />\n          }\n          label=\"Is this a link?\"\n        />\n        {checked && (\n          <TextField\n            margin=\"dense\"\n            id=\"link\"\n            label=\"Link URL\"\n            type=\"text\"\n            onChange={(e) =>\n              setImage({\n                ...image,\n                linkURL: e.target.value,\n              })\n            }\n            fullWidth\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.button}\n          onClick={handleAddClick}\n          variant=\"contained\"\n          color=\"primary\">\n          Add Image\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ImageDialog\n","import React from \"react\"\nimport { Editor, Transforms } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport ImageDialog from \"../dialogs/ImageDialog\"\nimport { Image } from \"../../types/image\"\nimport { types } from \"../../constants/types\"\nimport useStyles from \"../../styles/buttons\"\n\n// this is necessary to maintain editor selection when image dialog appears;\n// the deselect method unsets the editor selection\nTransforms.deselect = () => {}\n\nconst insertImage = (editor: Editor, image: Image) => {\n  const { url, description, width, height, linkURL } = image\n  const imageData = {\n    type: types.image,\n    url,\n    description,\n    width,\n    height,\n    linkURL,\n    children: [{ text: \"\" }],\n  }\n  Transforms.insertNodes(editor, imageData)\n}\n\ntype Props = {\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * ImageButton is a button specifically for adding images.\n */\nconst ImageButton = ({ icon }: Props) => {\n  const editor = useSlate()\n  const [imageDialogOpen, setImageDialogOpen] = React.useState(false)\n  const [image, setImage] = React.useState<Image>({\n    url: \"\",\n    description: \"\",\n  })\n  const props = {\n    active: false,\n  }\n  const classes = useStyles(props)\n\n  const handleAddImage = () => {\n    insertImage(editor, image)\n    setImageDialogOpen(false)\n  }\n\n  // if the user has clicked away without adding the image then we don't need to do anything with their data\n  const handleClose = () => setImageDialogOpen(false)\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"image\">\n        <IconButton\n          className={classes.button}\n          size=\"small\"\n          aria-label=\"image\"\n          onMouseDown={() => setImageDialogOpen(true)}>\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <ImageDialog\n        handleAddClick={handleAddImage}\n        handleClose={handleClose}\n        dialogOpen={imageDialogOpen}\n        image={image}\n        setImage={setImage}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default ImageButton\n","import React from \"react\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport useStyles from \"../../styles/dialog\"\nimport { VideoDialogProps } from \"../../types/dialog\"\n\nconst VideoDialog = ({\n  handleAddClick,\n  handleClose,\n  dialogOpen,\n  video,\n  setVideo,\n}: VideoDialogProps) => {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      open={dialogOpen}\n      onClose={handleClose}\n      aria-labelledby=\"video-dialog-title\">\n      <DialogTitle id=\"video-dialog-title\">Video Details</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"url\"\n          label=\"URL\"\n          type=\"url\"\n          onChange={(e) =>\n            setVideo({\n              ...video,\n              url: e.target.value,\n            })\n          }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"width\"\n          label=\"Width (optional)\"\n          type=\"number\"\n          onChange={(e) =>\n            setVideo({\n              ...video,\n              width: Number(e.target.value),\n            })\n          }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"height\"\n          label=\"Height (optional)\"\n          type=\"number\"\n          onChange={(e) =>\n            setVideo({\n              ...video,\n              height: Number(e.target.value),\n            })\n          }\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.button}\n          onClick={handleAddClick}\n          variant=\"contained\"\n          color=\"primary\">\n          Add Video\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default VideoDialog\n","const youTubeRegex = /(?:youtube\\.com\\/(?:[^/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/+|.*[?&]v=)|youtu\\.be\\/)([^\"&?/ ]{11})/i\nconst vimeoRegex = /\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_-]+)?/i\n\nconst getVideoID = (url: string) => {\n  let match\n  if (url.includes(\"youtube\")) {\n    match = url.match(youTubeRegex)\n  }\n  if (url.includes(\"vimeo\")) {\n    match = url.match(vimeoRegex)\n  }\n  if (match && match.length > 0) {\n    return match[1]\n  }\n\n  alert(\"Can only accept YouTube or Vimeo URL\")\n  return url\n}\n\nexport default getVideoID\n","import React from \"react\"\nimport { Editor, Transforms } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport VideoDialog from \"../dialogs/VideoDialog\"\nimport { types } from \"../../constants/types\"\nimport { Video } from \"../../types/video\"\nimport useStyles from \"../../styles/buttons\"\nimport getVideoID from \"../../utils/getVideoID\"\n\n// this is necessary to maintain editor selection when video dialog appears;\n// the deselect method unsets the editor selection\nTransforms.deselect = () => {}\n\n/**\n * addVideo inserts a new video node.\n */\nconst addVideo = (editor: Editor, video: Video) => {\n  const { url, width, height } = video\n  let transformedURL = url\n  const videoID = getVideoID(url)\n  if (url.match(/youtube\\.com/)) {\n    transformedURL = `https://www.youtube.com/embed/${videoID}`\n  }\n  if (url.match(/vimeo\\.com/)) {\n    transformedURL = `https://player.vimeo.com/video/${videoID}`\n  }\n  const videoData = {\n    type: types.video,\n    url: transformedURL,\n    width,\n    height,\n    children: [{ text: \"\" }],\n  }\n  Transforms.insertNodes(editor, videoData)\n}\n\ntype Props = {\n  /** Icon to display in button */\n  icon: JSX.Element\n}\n\n/**\n * VideoButton is a button specifically for adding videos.\n */\nconst VideoButton = ({ icon }: Props) => {\n  const editor = useSlate()\n  const [videoDialogOpen, setVideoDialogOpen] = React.useState(false)\n  const [video, setVideo] = React.useState<Video>({\n    url: \"\",\n  })\n  const props = {\n    active: false,\n  }\n  const classes = useStyles(props)\n\n  const handleAddVideo = () => {\n    addVideo(editor, video)\n    setVideoDialogOpen(false)\n  }\n\n  // if the user has clicked away without adding the video then we don't need to do anything with their data\n  const handleClose = () => setVideoDialogOpen(false)\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"video\">\n        <IconButton\n          className={classes.button}\n          size=\"small\"\n          aria-label=\"video\"\n          onMouseDown={() => setVideoDialogOpen(true)}>\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <VideoDialog\n        handleAddClick={handleAddVideo}\n        handleClose={handleClose}\n        dialogOpen={videoDialogOpen}\n        video={video}\n        setVideo={setVideo}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default VideoButton\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst ScientificSymbolIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M14 20v-2.157c1.863-1.192 3.5-3.875 3.5-6.959 0-3.073-2-6.029-5.5-6.029s-5.5 2.956-5.5 6.03c0 3.083 1.637 5.766 3.5 6.958V20H3v-2h4.76C5.666 16.505 4 13.989 4 10.884 4 6.247 7.5 3 12 3s8 3.247 8 7.884c0 3.105-1.666 5.621-3.76 7.116H21v2h-7z\" />\n    </SvgIcon>\n  )\n}\n\nexport default ScientificSymbolIcon\n","import React, { MouseEvent } from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Popper from \"@material-ui/core/Popper\"\nimport ScientificSymbolIcon from \"../icons/ScientificSymbolIcon\"\n\nconst getSymbolsList = () => {\n  const start = 0x0391\n  const end = 0x03c9\n  const symbols = []\n  for (let i = start; i < end; i++) {\n    symbols.push(String.fromCharCode(i))\n  }\n  return symbols\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  popper: {\n    marginTop: theme.spacing(1.5),\n    backgroundColor: theme.palette.grey[100],\n    width: \"400px\",\n  },\n  button: {\n    borderRadius: \"0px\",\n    border: `1px solid ${theme.palette.grey[200]}`,\n    width: \"21px\",\n  },\n}))\n\n/**\n * ScientificSymbolsButton displays a button and popper for scientific symbols.\n */\nconst ScientificSymbolsButton = () => {\n  const editor = useSlate()\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleItemClick = (item: string) => {\n    Editor.insertText(editor, item)\n    setAnchorEl(null)\n  }\n\n  const handleMenuOpen = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const symbols = getSymbolsList()\n  const open = Boolean(anchorEl)\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"scientific symbols\">\n        <IconButton\n          size=\"small\"\n          aria-label=\"scientific symbols\"\n          aria-haspopup=\"true\"\n          onMouseDown={handleMenuOpen}>\n          <ScientificSymbolIcon />\n        </IconButton>\n      </Tooltip>\n      <Popper\n        className={classes.popper}\n        id={open ? \"symbol-popper\" : undefined}\n        open={open}\n        anchorEl={anchorEl}>\n        {symbols.map((item: string, index: number) => {\n          return (\n            <IconButton\n              className={classes.button}\n              key={index}\n              onClick={() => handleItemClick(item)}\n              size=\"small\">\n              {item}\n            </IconButton>\n          )\n        })}\n      </Popper>\n    </React.Fragment>\n  )\n}\n\nexport default ScientificSymbolsButton\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst BoldIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default BoldIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst ItalicIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n    </SvgIcon>\n  )\n}\n\nexport default ItalicIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst StrikethroughIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default StrikethroughIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SubscriptIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M22,18h-2v1h3v1h-4v-2c0-0.55,0.45-1,1-1h2v-1h-3v-1h3c0.55,0,1,0.45,1,1v1C23,17.55,22.55,18,22,18z M5.88,18h2.66 l3.4-5.42h0.12l3.4,5.42h2.66l-4.65-7.27L17.81,4h-2.68l-3.07,4.99h-0.12L8.85,4H6.19l4.32,6.73L5.88,18z\" />\n    </SvgIcon>\n  )\n}\n\nexport default SubscriptIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SuperscriptIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M22,7h-2v1h3v1h-4V7c0-0.55,0.45-1,1-1h2V5h-3V4h3c0.55,0,1,0.45,1,1v1C23,6.55,22.55,7,22,7z M5.88,20h2.66l3.4-5.42h0.12 l3.4,5.42h2.66l-4.65-7.27L17.81,6h-2.68l-3.07,4.99h-0.12L8.85,6H6.19l4.32,6.73L5.88,20z\" />\n    </SvgIcon>\n  )\n}\n\nexport default SuperscriptIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst UnderlinedIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default UnderlinedIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst H1Icon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14h-2V9h-2V7h4v10z\" />\n    </SvgIcon>\n  )\n}\n\nexport default H1Icon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst H2Icon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8c0 1.11-.9 2-2 2h-2v2h4v2H9v-4c0-1.11.9-2 2-2h2V9H9V7h4c1.1 0 2 .89 2 2v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default H2Icon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst H3Icon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M.01 0h24v24h-24z\" fill=\"none\" />\n      <path d=\"M19.01 3h-14c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 7.5c0 .83-.67 1.5-1.5 1.5.83 0 1.5.67 1.5 1.5V15c0 1.11-.9 2-2 2h-4v-2h4v-2h-2v-2h2V9h-4V7h4c1.1 0 2 .89 2 2v1.5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default H3Icon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst LinkIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default LinkIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst DividerIcon = () => {\n  return (\n    <SvgIcon>\n      <rect fill=\"none\" fillRule=\"evenodd\" height=\"24\" width=\"24\" />\n      <rect fillRule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\" />\n    </SvgIcon>\n  )\n}\n\nexport default DividerIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst LineSpacingIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M6 7h2.5L5 3.5 1.5 7H4v10H1.5L5 20.5 8.5 17H6V7zm4-2v2h12V5H10zm0 14h12v-2H10v2zm0-6h12v-2H10v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default LineSpacingIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst ImageIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default ImageIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst VideoIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\" />\n    </SvgIcon>\n  )\n}\n\nexport default VideoIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst UnorderedListIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\" />\n    </SvgIcon>\n  )\n}\n\nexport default UnorderedListIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst OrderedListIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default OrderedListIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst IndentIncreaseIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default IndentIncreaseIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst IndentDecreaseIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M11 17h10v-2H11v2zm-8-5l4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default IndentDecreaseIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignLeftIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignLeftIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignCenterIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignCenterIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignRightIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignRightIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst AlignJustifyIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AlignJustifyIcon\n","import React from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Select from \"@material-ui/core/Select\"\nimport getCurrentMark from \"../../utils/getCurrentMark\"\n\ntype StyleProps = {\n  /** Minimum width of dropdown */\n  minWidth: string\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  dropdown: (props: StyleProps) => ({\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: \"0px\",\n    marginBottom: \"0px\",\n    minWidth: props.minWidth,\n  }),\n}))\n\ntype Props = {\n  /** List of values to display in dropdown */\n  values: string[]\n  /** Default value of dropdown */\n  defaultValue: string\n  /** Mark to add to Slate data */\n  mark: string\n  /** Minimum width of dropdown */\n  minWidth?: string\n}\n\nconst Dropdown = ({\n  values,\n  defaultValue,\n  mark,\n  minWidth = \"150px\",\n}: Props) => {\n  const editor = useSlate()\n  const props = { minWidth }\n  const classes = useStyles(props)\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    Editor.addMark(editor, mark, event.target.value)\n  }\n\n  return (\n    <FormControl className={classes.dropdown}>\n      <Select\n        value={getCurrentMark(editor, mark) || defaultValue}\n        onChange={handleChange}>\n        {values.map((val) => (\n          <MenuItem key={val} value={val} style={{ [mark]: val }}>\n            {val}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default Dropdown\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst FontColorIcon = () => {\n  return (\n    <SvgIcon>\n      <path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\" />\n    </SvgIcon>\n  )\n}\n\nexport default FontColorIcon\n","import { Editor, Element as SlateElement, Transforms } from \"slate\"\nimport { isBlockActive } from \"./blocks\"\nimport { types } from \"../constants/types\"\n\n/**\n * toggleList toggles the given selection as a list type.\n */\nconst toggleList = (editor: Editor, format: string) => {\n  // first find if the selected block is currently active\n  const isActive = isBlockActive(editor, \"type\", format)\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n    split: true,\n  })\n\n  const type = isActive ? types.paragraph : types.listItem\n\n  Transforms.setNodes(editor, {\n    type: type,\n  })\n\n  if (!isActive) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nexport { toggleList }\n","import { Editor, Element, Node, Point, Range, Transforms } from \"slate\"\nimport { types } from \"../constants/types\"\n\n// helper function to check for ul/ol match\nconst parentListMatch = (n: Node) =>\n  (!Editor.isEditor(n) &&\n    Element.isElement(n) &&\n    n.type === types.orderedList) ||\n  (!Editor.isEditor(n) &&\n    Element.isElement(n) &&\n    n.type === types.unorderedList)\n\n// helper function to check for li match\nconst listItemMatch = (n: Node) =>\n  !Editor.isEditor(n) && Element.isElement(n) && n.type === types.listItem\n\n// helper function to get matching ul/ol node\nconst findMatchingList = (editor: Editor) => {\n  const [listMatch] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => parentListMatch(n),\n    }),\n  )\n  return listMatch\n}\n\n// helper function to get matching li node\nconst findMatchingListItem = (editor: Editor) => {\n  const [match] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => listItemMatch(n),\n    }),\n  )\n  return match\n}\n\nconst setParagraphNode = (editor: Editor) => {\n  Transforms.setNodes(\n    editor,\n    { type: types.paragraph },\n    {\n      match: (n) => listItemMatch(n),\n    },\n  )\n}\n\n// helper function called when user escapes out of list\nconst liftNodes = (editor: Editor) => {\n  // check for new parent\n  const listMatch = findMatchingList(editor)\n  // verify there is an active list to lift the nodes\n  if (listMatch) {\n    // lift the list item node to next parent\n    Transforms.liftNodes(editor, {\n      match: (n) => listItemMatch(n),\n    })\n  }\n}\n\nconst handleLists = (editor: Editor, callback: () => void) => {\n  const { selection } = editor\n\n  // check that there is a current selection without highlight\n  if (selection && Range.isCollapsed(selection)) {\n    // find the closest list item element\n    const [match] = Array.from(\n      Editor.nodes(editor, {\n        match: (n) =>\n          listItemMatch(n) &&\n          n.children &&\n          n.children[0] &&\n          (!n.children[0].text || n.children[0].text === \"\"),\n      }),\n    )\n\n    // check that there was a match\n    if (match) {\n      const [, path] = match\n      const start = Editor.start(editor, path)\n\n      // if the selection is at the beginning of the list item\n      if (Point.equals(selection.anchor, start)) {\n        // lift the list item to the next parent\n        liftNodes(editor)\n        // check for the new parent\n        const listMatch = findMatchingList(editor)\n        // if it is no longer within a ul/ol, turn into normal paragraph\n        if (!listMatch) {\n          setParagraphNode(editor)\n        }\n        return\n      }\n    }\n  }\n\n  callback()\n}\n\n/**\n * withLists modifies the logic for inserting a line break inside lists.\n */\nconst withLists = (editor: Editor) => {\n  const { insertBreak, deleteBackward } = editor\n\n  editor.insertBreak = () => {\n    handleLists(editor, insertBreak)\n  }\n\n  editor.deleteBackward = (...args) => {\n    handleLists(editor, () => deleteBackward(...args))\n  }\n\n  return editor\n}\n\nconst indentItem = (editor: Editor) => {\n  const { selection } = editor\n\n  // check that there is a current selection without highlight\n  if (selection && Range.isCollapsed(selection)) {\n    const match = findMatchingListItem(editor)\n\n    if (match) {\n      const [listMatch] = Array.from(\n        Editor.nodes(editor, {\n          mode: \"lowest\",\n          match: (n) => parentListMatch(n),\n        }),\n      )\n\n      if (listMatch) {\n        let depth = listMatch[1].length\n        if (depth <= 5 && Element.isElement(listMatch[0])) {\n          Transforms.wrapNodes(editor, {\n            type: listMatch[0].type,\n            children: [],\n          })\n        }\n      }\n    } else {\n      // if the user is hitting tab and not inside a list, insert spaces\n      editor.insertText(\"    \")\n    }\n  }\n}\n\nconst undentItem = (editor: Editor) => {\n  const { selection } = editor\n\n  if (selection && Range.isCollapsed(selection)) {\n    const match = findMatchingListItem(editor)\n\n    if (match) {\n      liftNodes(editor)\n      const listMatch = findMatchingList(editor)\n\n      // if it is no longer within an active list, turn into paragraph\n      if (!listMatch) {\n        setParagraphNode(editor)\n      }\n    }\n  }\n}\n\nexport { undentItem, indentItem }\nexport default withLists\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst TableIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M13 10v4h6v-4h-6zm-2 0H5v4h6v-4zm2 9h6v-3h-6v3zm-2 0v-3H5v3h6zm2-14v3h6V5h-6zm-2 0H5v3h6V5zM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z\" />\n    </SvgIcon>\n  )\n}\n\nexport default TableIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst TableInsertColumnIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n      <path d=\"M10 3c.552 0 1 .448 1 1v16c0 .552-.448 1-1 1H4c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h6zM9 5H5v14h4V5zm9 2c2.761 0 5 2.239 5 5s-2.239 5-5 5-5-2.239-5-5 2.239-5 5-5zm1 2h-2v1.999L15 11v2l2-.001V15h2v-2.001L21 13v-2l-2-.001V9z\" />\n    </SvgIcon>\n  )\n}\n\nexport default TableInsertColumnIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst TableInsertRowIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n      <path d=\"M12 13c2.761 0 5 2.239 5 5s-2.239 5-5 5-5-2.239-5-5 2.239-5 5-5zm1 2h-2v1.999L9 17v2l2-.001V21h2v-2.001L15 19v-2l-2-.001V15zm7-12c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1H4c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h16zM5 5v4h14V5H5z\" />\n    </SvgIcon>\n  )\n}\n\nexport default TableInsertRowIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst TableDeleteColumnIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n      <path d=\"M12 3c.552 0 1 .448 1 1v8c.835-.628 1.874-1 3-1 2.761 0 5 2.239 5 5s-2.239 5-5 5c-1.032 0-1.99-.313-2.787-.848L13 20c0 .552-.448 1-1 1H6c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h6zm-1 2H7v14h4V5zm8 10h-6v2h6v-2z\" />\n    </SvgIcon>\n  )\n}\n\nexport default TableDeleteColumnIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst TableDeleteRowIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n      <path d=\"M20 5c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1 .628.835 1 1.874 1 3 0 2.761-2.239 5-5 5s-5-2.239-5-5c0-1.126.372-2.165 1-3H4c-.552 0-1-.448-1-1V6c0-.552.448-1 1-1h16zm-7 10v2h6v-2h-6zm6-8H5v4h14V7z\" />\n    </SvgIcon>\n  )\n}\n\nexport default TableDeleteRowIcon\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst DeleteIcon = () => {\n  return (\n    <SvgIcon>\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3zm1 2H6v12h12V8zm-9 3h2v6H9v-6zm4 0h2v6h-2v-6zM9 4v2h6V4H9z\" />\n    </SvgIcon>\n  )\n}\n\nexport default DeleteIcon\n","import { Editor, Element as SlateElement, Path, Transforms } from \"slate\"\nimport { isBlockActive } from \"./blocks\"\nimport { types } from \"../constants/types\"\n\nconst getNodeAbove = (editor: Editor, type: string) => {\n  const ancestor = Editor.above(editor, {\n    match: (n) =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === type,\n  })\n  return ancestor\n}\n\nconst getEmptyTableCell = () => ({\n  type: types.tableCell,\n  children: [\n    {\n      type: types.paragraph,\n      children: [{ text: \" \" }],\n    },\n  ],\n})\n\nconst getEmptyTableRow = (count: number) => ({\n  type: types.tableRow,\n  children: Array(count)\n    .fill(\"\")\n    .map(() => getEmptyTableCell()),\n})\n\nconst getEmptyTable = (row: number, col: number) => ({\n  type: types.tableWrap,\n  children: [\n    {\n      type: types.table,\n      row,\n      col,\n      children: Array(row)\n        .fill(\" \")\n        .map(() => getEmptyTableRow(col)),\n    },\n    {\n      type: types.paragraph,\n      children: [{ text: \"\" }],\n    },\n  ],\n})\n\nconst insertTable = (editor: Editor) => {\n  if (!isBlockActive(editor, \"type\", types.table)) {\n    Transforms.insertNodes(editor, getEmptyTable(1, 2))\n  }\n}\n\nconst insertTableRow = (editor: Editor) => {\n  const currentRow = getNodeAbove(editor, types.tableRow)\n  if (currentRow === undefined) {\n    return\n  }\n\n  const [, rowPath] = currentRow\n  const [tableNode, tablePath] = Editor.parent(editor, rowPath)\n  if (!SlateElement.isElement(tableNode)) {\n    return\n  }\n\n  const col = tableNode.col as number\n  const row = tableNode.row as number\n\n  Transforms.insertNodes(editor, getEmptyTableRow(col), {\n    at: Path.next(rowPath),\n  })\n\n  Transforms.setNodes(editor, { row: row + 1 }, { at: tablePath })\n}\n\nconst insertTableColumn = (editor: Editor) => {\n  const currentCell = getNodeAbove(editor, types.tableCell)\n  if (currentCell === undefined) {\n    return\n  }\n  const currentTable = getNodeAbove(editor, types.table)\n  if (currentTable === undefined) {\n    return\n  }\n\n  const [, cellPath] = currentCell\n  const [tableNode, tablePath] = currentTable\n\n  // get next item in path where new cell should be located\n  const nextCellPath = Path.next(cellPath)\n  // get copy of next cell path to change index later\n  const newCellPath = nextCellPath.slice()\n  // find path position to enter new cell\n  const replacePathPos = newCellPath.length - 2\n  // get index of current row using this path position\n  const currentRowIndex = newCellPath[replacePathPos]\n\n  if (!SlateElement.isElement(tableNode)) {\n    return\n  }\n\n  // loop over table node and insert empty cells at given path\n  tableNode.children.forEach(\n    // @ts-ignore <-- used because we don't need the first val here\n    (_, index: number) => {\n      // replace path position in new cell path with the current index\n      newCellPath[replacePathPos] = index\n      // insert an empty table cell at this position\n      Transforms.insertNodes(editor, getEmptyTableCell(), {\n        at: newCellPath,\n        select: index === currentRowIndex,\n      })\n    },\n  )\n  // update col attribute for table node\n  Transforms.setNodes(\n    editor,\n    { col: Number(tableNode.col) + 1 },\n    {\n      at: tablePath,\n    },\n  )\n}\n\nconst deleteTable = (editor: Editor) => {\n  const tableMatch = getNodeAbove(editor, types.tableWrap)\n\n  if (tableMatch) {\n    Transforms.removeNodes(editor, {\n      at: tableMatch[1],\n    })\n  }\n}\n\nconst deleteTableRow = (editor: Editor) => {\n  const currentRow = getNodeAbove(editor, types.tableRow)\n  if (currentRow === undefined) {\n    return\n  }\n\n  const [, rowPath] = currentRow\n  const [tableNode, tablePath] = Editor.parent(editor, rowPath)\n\n  if (!SlateElement.isElement(tableNode)) {\n    return\n  }\n\n  const row = Number(tableNode.row)\n\n  // if there's only one row in the table then safely remove the table\n  if (row === 1) {\n    deleteTable(editor)\n    return\n  }\n  // otherwise remove the nodes at the row path and then set table node's\n  // row attribute to one less\n  Transforms.removeNodes(editor, {\n    at: rowPath,\n  })\n  Transforms.setNodes(\n    editor,\n    {\n      row: row - 1,\n    },\n    {\n      at: tablePath,\n    },\n  )\n}\n\nconst deleteTableColumn = (editor: Editor) => {\n  const currentCell = getNodeAbove(editor, types.tableCell)\n  if (currentCell === undefined) {\n    return\n  }\n  const currentTable = getNodeAbove(editor, types.table)\n  if (currentTable === undefined) {\n    return\n  }\n\n  const [, cellPath] = currentCell\n  const [tableNode, tablePath] = currentTable\n\n  if (!SlateElement.isElement(tableNode)) {\n    return\n  }\n\n  const col = Number(tableNode.col)\n\n  if (col === 1) {\n    deleteTable(editor)\n    return\n  }\n\n  const pathToDelete = cellPath.slice()\n  const replacePathPos = pathToDelete.length - 2\n  // @ts-ignore <-- use to ignore unneeded value\n  tableNode.children.forEach((_, index: number) => {\n    pathToDelete[replacePathPos] = index\n    Transforms.removeNodes(editor, {\n      at: pathToDelete,\n    })\n  })\n\n  Transforms.setNodes(\n    editor,\n    {\n      col: col - 1,\n    },\n    {\n      at: tablePath,\n    },\n  )\n}\n\nexport {\n  insertTable,\n  insertTableRow,\n  insertTableColumn,\n  deleteTable,\n  deleteTableRow,\n  deleteTableColumn,\n}\n","import React, { MouseEvent } from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport BlockButton from \"./BlockButton\"\nimport TableIcon from \"../icons/TableIcon\"\nimport TableInsertColumnIcon from \"../icons/TableInsertColumnIcon\"\nimport TableInsertRowIcon from \"../icons/TableInsertRowIcon\"\nimport TableDeleteColumnIcon from \"../icons/TableDeleteColumnIcon\"\nimport TableDeleteRowIcon from \"../icons/TableDeleteRowIcon\"\nimport DeleteIcon from \"../icons/DeleteIcon\"\n// import BorderColorIcon from \"../icons/BorderColorIcon\"\n// import TableBorderButton from \"./TableBorderButton\"\nimport { isBlockActive } from \"../../utils/blocks\"\nimport useStyles from \"../../styles/buttons\"\nimport { types } from \"../../constants/types\"\nimport {\n  insertTable,\n  insertTableRow,\n  insertTableColumn,\n  deleteTable,\n  deleteTableRow,\n  deleteTableColumn,\n} from \"../../utils/tables\"\n\nconst tableButtons = (editor: Editor) => [\n  {\n    format: types.tableColumn,\n    icon: <TableInsertColumnIcon />,\n    callback: () => insertTableColumn(editor),\n  },\n  {\n    format: types.tableRow,\n    icon: <TableInsertRowIcon />,\n    callback: () => insertTableRow(editor),\n  },\n  {\n    format: types.tableColumnDelete,\n    icon: <TableDeleteColumnIcon />,\n    callback: () => deleteTableColumn(editor),\n  },\n  {\n    format: types.tableRowDelete,\n    icon: <TableDeleteRowIcon />,\n    callback: () => deleteTableRow(editor),\n  },\n  {\n    format: types.tableDelete,\n    icon: <DeleteIcon />,\n    callback: () => deleteTable(editor),\n  },\n]\n\n/**\n * TableButtons handles the display logic for the table buttons in the toolbar.\n */\nconst TableButtons = () => {\n  const editor = useSlate()\n  const active = isBlockActive(editor, \"type\", types.tableWrap)\n  const props = {\n    active: active,\n  }\n  const classes = useStyles(props)\n\n  // when button is clicked, toggle the block within the editor\n  const handleMouseDown = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    insertTable(editor)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip title={types.table}>\n        <IconButton\n          className={classes.button}\n          size=\"small\"\n          aria-label={types.table}\n          // use onMouseDown to avoid editor selection becoming null\n          // and losing cursor position\n          onMouseDown={handleMouseDown}>\n          <TableIcon />\n        </IconButton>\n      </Tooltip>\n      {active && (\n        <React.Fragment>\n          {tableButtons(editor).map((item) => (\n            <BlockButton\n              format={item.format}\n              icon={item.icon}\n              clickFn={item.callback}\n              key={item.format}\n            />\n          ))}\n          {/* <TableBorderButton icon={<BorderColorIcon />} /> */}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default TableButtons\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  separator: {\n    borderLeftColor: \"#c1c1c1\",\n    borderLeftStyle: \"solid\",\n    borderLeftWidth: \"1px\",\n    display: \"inline-block\",\n    height: \"20px\",\n    verticalAlign: \"middle\",\n  },\n})\n\nconst Separator = () => {\n  const classes = useStyles()\n\n  return <div className={classes.separator} />\n}\n\nexport default Separator\n","import React from \"react\"\nimport { Editor } from \"slate\"\nimport { useSlate } from \"slate-react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Grid from \"@material-ui/core/Grid\"\nimport MarkButton from \"./buttons/MarkButton\"\nimport BlockButton from \"./buttons/BlockButton\"\nimport AlignButton from \"./buttons/AlignButton\"\nimport LinkButton from \"./buttons/LinkButton\"\nimport AutolinkIDsButton from \"./buttons/AutolinkIDsButton\"\nimport FontColorButton from \"./buttons/FontColorButton\"\nimport LineSpacingButton from \"./buttons/LineSpacingButton\"\nimport ImageButton from \"./buttons/ImageButton\"\nimport VideoButton from \"./buttons/VideoButton\"\nimport ScientificSymbolsButton from \"./buttons/ScientificSymbolsButton\"\n// mark icons\nimport BoldIcon from \"./icons/BoldIcon\"\nimport ItalicIcon from \"./icons/ItalicIcon\"\nimport StrikethroughIcon from \"./icons/StrikethroughIcon\"\nimport SubscriptIcon from \"./icons/SubscriptIcon\"\nimport SuperscriptIcon from \"./icons/SuperscriptIcon\"\nimport UnderlinedIcon from \"./icons/UnderlinedIcon\"\n// block icons\nimport H1Icon from \"./icons/H1Icon\"\nimport H2Icon from \"./icons/H2Icon\"\nimport H3Icon from \"./icons/H3Icon\"\nimport LinkIcon from \"./icons/LinkIcon\"\nimport DividerIcon from \"./icons/DividerIcon\"\nimport LineSpacingIcon from \"./icons/LineSpacingIcon\"\nimport ImageIcon from \"./icons/ImageIcon\"\nimport VideoIcon from \"./icons/VideoIcon\"\nimport UnorderedListIcon from \"./icons/UnorderedListIcon\"\nimport OrderedListIcon from \"./icons/OrderedListIcon\"\nimport IndentIncreaseIcon from \"./icons/IndentIncreaseIcon\"\nimport IndentDecreaseIcon from \"./icons/IndentDecreaseIcon\"\n// align icons\nimport AlignLeftIcon from \"./icons/AlignLeftIcon\"\nimport AlignCenterIcon from \"./icons/AlignCenterIcon\"\nimport AlignRightIcon from \"./icons/AlignRightIcon\"\nimport AlignJustifyIcon from \"./icons/AlignJustifyIcon\"\n// dropdowns\nimport Dropdown from \"./dropdowns/Dropdown\"\nimport FontColorIcon from \"./icons/FontColorIcon\"\n// utils\nimport { FontFamilyList, FontSizeList } from \"../utils/dropdownValues\"\n// types\nimport { types, alignments } from \"../constants/types\"\nimport { toggleBlock } from \"../utils/blocks\"\nimport { toggleList } from \"../utils/lists\"\nimport { indentItem, undentItem } from \"../plugins/withLists\"\nimport TableButtons from \"./buttons/TableButtons\"\nimport Separator from \"./Separator\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    marginBottom: theme.spacing(1),\n  },\n  toolbar: {\n    position: \"sticky\",\n    top: 0,\n    cursor: \"default\",\n  },\n  divider: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n  },\n}))\n\nconst listButtons = (editor: Editor) => [\n  {\n    format: types.unorderedList,\n    icon: <UnorderedListIcon />,\n    callback: () => toggleList(editor, types.unorderedList),\n  },\n  {\n    format: types.orderedList,\n    icon: <OrderedListIcon />,\n    callback: () => toggleList(editor, types.orderedList),\n  },\n  {\n    format: types.indentIncrease,\n    icon: <IndentIncreaseIcon />,\n    callback: () => indentItem(editor),\n  },\n  {\n    format: types.indentDecrease,\n    icon: <IndentDecreaseIcon />,\n    callback: () => undentItem(editor),\n  },\n]\n\n/**\n * Toolbar is the display for the editor toolbar.\n */\nconst EditorToolbar = () => {\n  const editor = useSlate()\n  const classes = useStyles()\n\n  return (\n    <AppBar color=\"default\" position=\"static\" className={classes.container}>\n      <Toolbar disableGutters variant=\"dense\" className={classes.toolbar}>\n        <Grid container>\n          <Grid item xs={12}>\n            <MarkButton format={types.bold} icon={<BoldIcon />} />\n            <MarkButton format={types.italic} icon={<ItalicIcon />} />\n            <MarkButton format={types.underline} icon={<UnderlinedIcon />} />\n            <MarkButton\n              format={types.strikethrough}\n              icon={<StrikethroughIcon />}\n            />\n            <MarkButton format={types.subscript} icon={<SubscriptIcon />} />\n            <MarkButton format={types.superscript} icon={<SuperscriptIcon />} />\n            <Separator />\n            <BlockButton\n              format={types.h1}\n              icon={<H1Icon />}\n              clickFn={() => toggleBlock(editor, types.h1)}\n            />\n            <BlockButton\n              format={types.h2}\n              icon={<H2Icon />}\n              clickFn={() => toggleBlock(editor, types.h2)}\n            />\n            <BlockButton\n              format={types.h3}\n              icon={<H3Icon />}\n              clickFn={() => toggleBlock(editor, types.h3)}\n            />\n            <LinkButton icon={<LinkIcon />} />\n            <AutolinkIDsButton />\n            <Separator />\n            <AlignButton align={alignments.left} icon={<AlignLeftIcon />} />\n            <AlignButton align={alignments.center} icon={<AlignCenterIcon />} />\n            <AlignButton align={alignments.right} icon={<AlignRightIcon />} />\n            <AlignButton\n              align={alignments.justify}\n              icon={<AlignJustifyIcon />}\n            />\n            <BlockButton\n              format={types.divider}\n              icon={<DividerIcon />}\n              clickFn={() => toggleBlock(editor, types.divider)}\n            />\n            <Separator />\n            {listButtons(editor).map((item) => (\n              <BlockButton\n                format={item.format}\n                icon={item.icon}\n                clickFn={item.callback}\n                key={item.format}\n              />\n            ))}\n            <Separator />\n            <TableButtons />\n            <Separator />\n            <LineSpacingButton icon={<LineSpacingIcon />} />\n            <ImageButton icon={<ImageIcon />} />\n            <VideoButton icon={<VideoIcon />} />\n            <Separator />\n            <FontColorButton icon={<FontColorIcon />} />\n            <ScientificSymbolsButton />\n            <Dropdown\n              mark=\"fontFamily\"\n              defaultValue=\"Roboto\"\n              values={FontFamilyList}\n            />\n            <Dropdown\n              mark=\"fontSize\"\n              defaultValue=\"1rem\"\n              values={FontSizeList}\n              minWidth=\"90px\"\n            />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default EditorToolbar\n","import React from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Grid from \"@material-ui/core/Grid\"\nimport MarkButton from \"./buttons/MarkButton\"\nimport LinkButton from \"./buttons/LinkButton\"\nimport AutolinkIDsButton from \"./buttons/AutolinkIDsButton\"\nimport ScientificSymbolsButton from \"./buttons/ScientificSymbolsButton\"\nimport BoldIcon from \"./icons/BoldIcon\"\nimport ItalicIcon from \"./icons/ItalicIcon\"\nimport StrikethroughIcon from \"./icons/StrikethroughIcon\"\nimport SubscriptIcon from \"./icons/SubscriptIcon\"\nimport SuperscriptIcon from \"./icons/SuperscriptIcon\"\nimport UnderlinedIcon from \"./icons/UnderlinedIcon\"\nimport LinkIcon from \"./icons/LinkIcon\"\nimport { types } from \"../constants/types\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    marginBottom: theme.spacing(1),\n  },\n  toolbar: {\n    position: \"sticky\",\n    top: 0,\n    cursor: \"default\",\n  },\n}))\n\n/**\n * InlineToolbar is a condensed toolbar used for inline editing.\n */\nconst InlineToolbar = () => {\n  const classes = useStyles()\n\n  return (\n    <AppBar color=\"default\" position=\"static\" className={classes.container}>\n      <Toolbar disableGutters variant=\"dense\" className={classes.toolbar}>\n        <Grid container>\n          <Grid item xs={12}>\n            <MarkButton format={types.bold} icon={<BoldIcon />} />\n            <MarkButton format={types.italic} icon={<ItalicIcon />} />\n            <MarkButton format={types.underline} icon={<UnderlinedIcon />} />\n            <MarkButton\n              format={types.strikethrough}\n              icon={<StrikethroughIcon />}\n            />\n            <MarkButton format={types.subscript} icon={<SubscriptIcon />} />\n            <MarkButton format={types.superscript} icon={<SuperscriptIcon />} />\n            <LinkButton icon={<LinkIcon />} />\n            <AutolinkIDsButton />\n            <ScientificSymbolsButton />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default InlineToolbar\n","import { makeStyles } from \"@material-ui/core/styles\"\n\ntype StyleProps = {\n  align: string | unknown\n  selected: boolean\n  focused: boolean\n}\n\nconst useStyles = makeStyles(() => ({\n  container: (props: StyleProps) => ({\n    textAlign: props.align,\n    display: \"block\",\n  }),\n  media: (props: StyleProps) => ({\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    boxShadow: props.selected && props.focused ? \"0 0 0 3px #B4D5FF\" : \"none\",\n  }),\n}))\n\nexport default useStyles\n","import React from \"react\"\nimport { useSelected, useFocused } from \"slate-react\"\nimport useStyles from \"../styles/media\"\nimport { Props } from \"../types/element\"\n\n/**\n * Image handles the display of any images.\n */\nconst Image = ({ attributes, element, children }: Props) => {\n  const { align, url, description, width, height, linkURL } = element\n  const selected = useSelected()\n  const focused = useFocused()\n  const styleProps = {\n    align,\n    selected,\n    focused,\n  }\n  const classes = useStyles(styleProps)\n\n  const img = (\n    <img\n      src={url}\n      alt={description}\n      height={height || \"100%\"}\n      width={width || \"100%\"}\n      className={classes.media}\n    />\n  )\n\n  return (\n    <div className={classes.container} {...attributes}>\n      <div contentEditable={false}>\n        {linkURL !== \"\" ? <a href={linkURL}>{img}</a> : { img }}\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Image\n","import React from \"react\"\nimport { useSelected, useFocused } from \"slate-react\"\nimport useStyles from \"../styles/media\"\nimport { Props } from \"../types/element\"\n\n/**\n * Video handles the display of any videos.\n */\nconst Video = ({ attributes, element, children }: Props) => {\n  const { align, url, width, height } = element\n  const selected = useSelected()\n  const focused = useFocused()\n  const styleProps = {\n    align,\n    selected,\n    focused,\n  }\n  const classes = useStyles(styleProps)\n\n  return (\n    <div className={classes.container} {...attributes}>\n      <div contentEditable={false}>\n        <iframe\n          title=\"video-embed\"\n          id=\"videoplayer\"\n          width={width}\n          height={height}\n          src={url}\n          frameBorder=\"0\"\n          className={classes.media}\n          allowFullScreen\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Video\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport Link from \"@material-ui/core/Link\"\nimport Image from \"./Image\"\nimport Video from \"./Video\"\nimport { Props } from \"../types/element\"\nimport { types } from \"../constants/types\"\n\ntype StyleProps = {\n  lineSpacing: string | unknown\n  borderColor: string | unknown\n}\n\nconst useStyles = makeStyles(() => ({\n  lineSpacing: (props: StyleProps) => ({\n    lineHeight: props.lineSpacing,\n  }),\n  table: (props: StyleProps) => ({\n    border: `1px solid ${props.borderColor}`,\n    borderCollapse: \"collapse\",\n  }),\n  link: {\n    cursor: \"pointer\",\n  },\n}))\n\n/**\n * Element is used to render blocks based on a given type.\n */\nconst Element = ({ attributes, children, element }: Props) => {\n  const { type, align = \"inherit\", lineSpacing, borderColor, url } = element\n  const styleProps = {\n    lineSpacing: lineSpacing ? lineSpacing : \"normal\",\n    borderColor: borderColor ? borderColor : \"grey\",\n  }\n  const classes = useStyles(styleProps)\n\n  switch (type) {\n    case types.h1:\n      return (\n        <Typography variant=\"h1\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    case types.h2:\n      return (\n        <Typography variant=\"h2\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    case types.h3:\n      return (\n        <Typography variant=\"h3\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    case types.link:\n      return (\n        <Link href={url} className={classes.link} {...attributes}>\n          {children}\n        </Link>\n      )\n    case types.divider:\n      return <Divider {...attributes} />\n    case types.lineSpacing:\n      return (\n        <Typography\n          component=\"div\"\n          className={classes.lineSpacing}\n          {...attributes}>\n          {children}\n        </Typography>\n      )\n    case types.image:\n      return (\n        <Image element={element} attributes={attributes}>\n          {children}\n        </Image>\n      )\n    case types.video:\n      return (\n        <Video element={element} attributes={attributes}>\n          {children}\n        </Video>\n      )\n    case types.unorderedList:\n      return <ul {...attributes}>{children}</ul>\n    case types.orderedList:\n      return <ol {...attributes}>{children}</ol>\n    case types.listItem:\n      return <li {...attributes}>{children}</li>\n    case types.table:\n      return (\n        <Table className={classes.table}>\n          <TableBody {...attributes}>{children}</TableBody>\n        </Table>\n      )\n    case types.tableRow:\n      return <TableRow {...attributes}>{children}</TableRow>\n    case types.tableCell:\n      return (\n        <TableCell className={classes.table} {...attributes}>\n          {children}\n        </TableCell>\n      )\n    case types.tableWrap:\n      return (\n        <Typography component=\"div\" {...attributes}>\n          {children}\n        </Typography>\n      )\n    case types.paragraph:\n      return (\n        <Typography component=\"p\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n    default:\n      return (\n        <Typography component=\"div\" align={align} {...attributes}>\n          {children}\n        </Typography>\n      )\n  }\n}\n\nexport default Element\n","import { Editor, Element } from \"slate\"\nimport getParentNode from \"./getParentNode\"\nimport { types } from \"../constants/types\"\n\n/**\n * getFontSize is a helper function so any text nodes inside a header\n * element node can inherit the header font size\n */\nconst getFontSize = (editor: Editor, fontSize: string) => {\n  const node = getParentNode(editor)\n  // if the parent node is a header then its text children should inherit its size\n  if (Element.isElement(node) && node.type === types.h1) {\n    return \"inherit\"\n  }\n  if (Element.isElement(node) && node.type === types.h2) {\n    return \"inherit\"\n  }\n  if (Element.isElement(node) && node.type === types.h3) {\n    return \"inherit\"\n  }\n  return fontSize\n}\n\nexport default getFontSize\n","import React from \"react\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { useSlate, RenderLeafProps } from \"slate-react\"\nimport getFontSize from \"../utils/getFontSize\"\nimport \"../utils/fonts\"\n\ntype StyleProps = {\n  fontFamily: string | unknown\n  fontSize: string | unknown\n  fontColor: string | unknown\n}\n\nconst useStyles = makeStyles(() => ({\n  text: (props: StyleProps) => ({\n    fontFamily: props.fontFamily,\n    fontSize: props.fontSize,\n    color: props.fontColor,\n    lineHeight: \"inherit\",\n  }),\n}))\n\n/**\n * Leaf is used to render text based on a given style.\n *\n * We need to use standard if conditionals and not if/else if because\n * a leaf can have multiple matching properties. If a leaf is both bold\n * and italic, for example, then ultimately this component would render:\n *\n * <span {...attributes}><strong><em>{children}</em></strong></span>\n */\nconst Leaf = ({ attributes, children, leaf }: RenderLeafProps) => {\n  const editor = useSlate()\n  const theme = useTheme()\n  const props = {\n    fontFamily: leaf.fontFamily ? leaf.fontFamily : theme.typography.fontFamily,\n    fontSize: getFontSize(editor, leaf.fontSize as string),\n    fontColor: leaf.fontColor ? leaf.fontColor : theme.palette.text.primary,\n  }\n  const classes = useStyles(props)\n\n  if (leaf.bold) {\n    children = <strong data-testid=\"bold\">{children}</strong>\n  }\n\n  if (leaf.italic) {\n    children = <em data-testid=\"italic\">{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u data-testid=\"underline\">{children}</u>\n  }\n\n  if (leaf.strikethrough) {\n    children = <s data-testid=\"strikethrough\">{children}</s>\n  }\n\n  if (leaf.subscript) {\n    children = <sub data-testid=\"subscript\">{children}</sub>\n  }\n\n  if (leaf.superscript) {\n    children = <sup data-testid=\"superscript\">{children}</sup>\n  }\n\n  return (\n    <Typography component=\"span\" className={classes.text} {...attributes}>\n      {children}\n    </Typography>\n  )\n}\n\nexport default Leaf\n","import { jsx } from \"slate-hyperscript\"\nimport { types } from \"../constants/types\"\nimport { DeserializeElement, DeserializeLeafValue } from \"../types/deserialize\"\n\nconst elementTags = {\n  A: (el: HTMLElement) => ({ type: types.link, url: el.getAttribute(\"href\") }),\n  H1: () => ({ type: types.h1 }),\n  H2: () => ({ type: types.h2 }),\n  H3: () => ({ type: types.h3 }),\n  IMG: (el: HTMLElement) => ({\n    type: types.image,\n    url: el.getAttribute(\"src\"),\n  }),\n  LI: () => ({ type: types.listItem }),\n  OL: () => ({ type: types.orderedList }),\n  UL: () => ({ type: types.unorderedList }),\n  P: () => ({ type: types.paragraph }),\n  HR: () => ({ type: types.divider }),\n  BR: () => ({ type: types.paragraph }),\n} as DeserializeElement\n\nconst leafTags = {\n  DEL: () => ({ strikethrough: true }),\n  EM: () => ({ italic: true }),\n  I: () => ({ italic: true }),\n  S: () => ({ strikethrough: true }),\n  STRONG: () => ({ bold: true }),\n  B: () => ({ bold: true }),\n  U: () => ({ underline: true }),\n  SUB: () => ({ subscript: true }),\n  SUP: () => ({ superscript: true }),\n} as DeserializeLeafValue\n\nconst deserialize = (el: any) => {\n  // text\n  if (el.nodeType === 3) {\n    return el.textContent\n  }\n  // not a tag\n  if (el.nodeType !== 1) {\n    return null\n  }\n\n  const { nodeName } = el\n  let parent = el\n\n  const children: any[] = Array.from(parent.childNodes).map(deserialize).flat()\n\n  // body\n  if (el.nodeName === \"BODY\") {\n    return jsx(\"fragment\", {}, children)\n  }\n\n  if (elementTags[nodeName]) {\n    const attrs = elementTags[nodeName](el)\n    return jsx(\"element\", attrs, children)\n  }\n\n  if (leafTags[nodeName]) {\n    const attrs = leafTags[nodeName](el)\n    return children\n      .filter((child) => typeof child === \"string\")\n      .map((child) => jsx(\"text\", attrs, child))\n  }\n\n  return children\n}\n\nexport default deserialize\n","import { Editor, Transforms } from \"slate\"\nimport deserialize from \"../utils/deserialize\"\n\n/**\n * withHTML parses HTML content and converts to Slate JSON\n */\nconst withHTML = (editor: Editor) => {\n  const { insertData } = editor\n\n  editor.insertData = (data) => {\n    const html = data.getData(\"text/html\")\n\n    if (html) {\n      const parsed = new DOMParser().parseFromString(html, \"text/html\")\n      const fragment = deserialize(parsed.body)\n      Transforms.insertFragment(editor, fragment)\n      return\n    }\n\n    insertData(data)\n  }\n\n  return editor\n}\n\nexport default withHTML\n","import { Editor } from \"slate\"\nimport { types } from \"../constants/types\"\n\nconst withLinks = (editor: Editor) => {\n  const { isInline } = editor\n\n  // make sure every link type is rendered as inline\n  // NOTE: if a node is inline then it automatically adds children with { text: \"\" }\n  // https://docs.slatejs.org/concepts/02-nodes\n  editor.isInline = (element) => {\n    if (element.type === types.link) {\n      return true\n    }\n    return isInline(element)\n  }\n\n  return editor\n}\n\nexport default withLinks\n","import { Editor } from \"slate\"\nimport { types } from \"../constants/types\"\n\nconst withMedia = (editor: Editor) => {\n  const { isVoid } = editor\n\n  // make sure every image type is void\n  editor.isVoid = (element) => {\n    if (element.type === types.image || element.type === types.video) {\n      return true\n    }\n    return isVoid(element)\n  }\n\n  return editor\n}\n\nexport default withMedia\n","import { Editor, Element, Transforms } from \"slate\"\nimport { types } from \"../constants/types\"\n\nconst withNormalize = (editor: Editor) => {\n  const { normalizeNode } = editor\n\n  editor.normalizeNode = (element) => {\n    const [node, path] = element\n    // make sure a paragraph follows every divider so cursor can always be\n    // placed after a divider\n    const divider = Element.isElement(node) && node.type === types.divider\n    const image = Element.isElement(node) && node.type === types.image\n    const video = Element.isElement(node) && node.type === types.video\n    if (divider || image || video) {\n      Transforms.insertNodes(editor, {\n        type: types.paragraph,\n        children: [{ text: \"\" }],\n      })\n    }\n\n    return normalizeNode([node, path])\n  }\n\n  return editor\n}\n\nexport default withNormalize\n","import { Editor } from \"slate\"\nimport { indentItem, undentItem } from \"../plugins/withLists\"\n\nconst onKeyDown = (event: React.KeyboardEvent, editor: Editor) => {\n  if (event.key === \"Tab\") {\n    event.preventDefault()\n    if (event.shiftKey) {\n      undentItem(editor)\n    } else {\n      indentItem(editor)\n    }\n  }\n}\n\nexport default onKeyDown\n","import { types } from \"../constants/types\"\n\n// the two font arrays are taken from the old page editor and used to convert old data\nconst FontFamilyList = [\n  { name: \"Lato\" },\n  { name: \"Merriweather\" },\n  { name: \"Montserrat\" },\n  { name: \"Roboto\" },\n  { name: \"Roboto Condensed\" },\n  { name: \"Roboto Mono\" },\n  { name: \"Roboto Slab\" },\n]\n\nconst FontSizeList = [\n  { size: \"12px\" },\n  { size: \"14px\" },\n  { size: \"16px\" },\n  { size: \"18px\" },\n  { size: \"20px\" },\n  { size: \"22px\" },\n  { size: \"26px\" },\n  { size: \"30px\" },\n]\n\n/**\n * convertData receives a node object and converts its nested\n * 'data' object into the new Slate format.\n */\nconst convertData = (node) => {\n  const { type } = node\n  switch (type) {\n    case \"alignment\":\n      return {\n        align: node.data[\"align\"],\n      }\n    case \"image\":\n      return {\n        url: node.data[\"src\"],\n        description: node.data[\"description\"],\n        height: node.data[\"height\"],\n        width: node.data[\"width\"],\n      }\n    case \"line-spacing\":\n      return {\n        lineSpacing: node.data[\"size\"],\n      }\n    case \"link\":\n      return {\n        url: node.data[\"href\"],\n      }\n    case \"video\":\n      return {\n        url: node.data[\"src\"],\n        height: node.data[\"height\"],\n        width: node.data[\"width\"],\n      }\n    default:\n      return {}\n  }\n}\n\n/**\n * convertType converts an existing 'type' property into the 'type'\n * used by the new version of the editor.\n */\nconst convertType = (type) => {\n  let convertedType = \"\"\n  switch (type) {\n    case \"heading_one\":\n    case \"heading-one\":\n    case \"heading_1\":\n      convertedType = types.h1\n      break\n    case \"heading_two\":\n    case \"heading-two\":\n    case \"heading_2\":\n      convertedType = types.h2\n      break\n    case \"heading_three\":\n    case \"heading-three\":\n    case \"heading_3\":\n      convertedType = types.h3\n      break\n    // h4-h6 not used in new editor\n    case \"heading_four\":\n    case \"heading-four\":\n    case \"heading_4\":\n      convertedType = types.h3\n      break\n    case \"heading_five\":\n    case \"heading-five\":\n    case \"heading_5\":\n      convertedType = types.h3\n      break\n    case \"heading_six\":\n    case \"heading-six\":\n    case \"heading_6\":\n      convertedType = types.h3\n      break\n    case \"line-spacing\":\n      convertedType = types.lineSpacing\n      break\n    case \"ordered-list\":\n    case \"ordered_list\":\n    case \"ol_list\":\n      convertedType = types.orderedList\n      break\n    case \"unordered-list\":\n    case \"unordered_list\":\n    case \"ul_list\":\n      convertedType = types.unorderedList\n      break\n    case \"list-item\":\n    case \"list_item\":\n    case \"list-item-child\":\n      convertedType = types.listItem\n      break\n    case \"table\":\n      convertedType = types.tableWrap\n      break\n    case \"table-row\":\n      convertedType = types.tableRow\n      break\n    case \"table-cell\":\n      convertedType = types.tableCell\n      break\n    case \"align_center\":\n    case \"align_left\":\n    case \"align_right\":\n    case \"align_center\":\n      convertedType = \"div\"\n      break\n    default:\n      convertedType = type\n  }\n  return convertedType\n}\n\nconst convertChildren = (node, align) => {\n  // if there are nodes then convert the children\n  if (node.nodes) {\n    return node.nodes.reduce((acc, val) => {\n      const nodes = convertNode(val)\n      // if the converted current value is an array, only grab the object inside of it\n      if (Array.isArray(nodes)) {\n        return [...acc, ...nodes]\n      }\n      // otherwise add the new value in its existing object form\n      return [...acc, nodes]\n    }, [])\n  }\n  // otherwise include mandatory object with text property\n  return [{ text: \"\" }]\n}\n\nconst alignmentTypes = [\n  \"alignment\",\n  \"align_left\",\n  \"align_center\",\n  \"align_right\",\n  \"align_justify\",\n]\n\nconst marksReducer = (acc, mark) => {\n  if (mark.type === \"font-color\") {\n    return {\n      ...acc,\n      fontColor: mark.data.color,\n    }\n  }\n  if (mark.type === \"font-family\") {\n    return {\n      ...acc,\n      fontFamily: FontFamilyList[mark.data.fontFamilyIndex].name,\n    }\n  }\n  if (mark.type === \"font-size\") {\n    return {\n      ...acc,\n      fontSize: FontSizeList[mark.data.fontSizeIndex].size,\n    }\n  }\n\n  return {\n    ...acc,\n    [mark.type]: true,\n  }\n}\n\nconst convertDataByType = (node) => {\n  const { type } = node\n  // remove any alignment wrappers from old structure;\n  // previously, changing the alignment would add a new <div> around the selection\n  if (alignmentTypes.includes(type)) {\n    const element = {\n      type: \"div\",\n      children: convertChildren(node),\n      ...convertData(node),\n    }\n    return element\n  }\n\n  return {\n    type: convertType(type),\n    children: convertChildren(node),\n    ...convertData(node),\n  }\n}\n\nconst convertNode = (node) => {\n  const { type } = node\n  if (type) {\n    return convertDataByType(node)\n  }\n\n  const { text, marks, leaves } = node\n\n  /**\n   * Leaves is an array containing leaf objects of this structure:\n   * {\n   *  object: \"leaf\",\n   *  text: \"george costanza\",\n   *  marks: [\n   *    {\n   *      object: \"mark\",\n   *      type: \"italic\",\n   *      data: {}\n   *    }\n   *  ]\n   * }\n   *\n   * Each leaf node needs to be converted recursively.\n   */\n  if (leaves) {\n    return [...leaves.map(convertNode)]\n  }\n\n  /**\n    Example node to check for:\n      {\n        object: \"leaf\",\n        text: \"periodically\",\n        marks: [\n          {\n            object: \"mark\",\n            type: \"italic\",\n            data: {},\n          },\n        ],\n      }\n    \n  */\n  if (marks && marks.length > 0) {\n    const allMarks = marks.reduce(marksReducer, {})\n    // return object with text and list of marks with appropriate values\n    return {\n      text,\n      ...allMarks,\n      fontColor: allMarks.fontColor || \"inherit\",\n    }\n  }\n\n  // if no leaves or marks then just return plain text\n  return {\n    text,\n    fontColor: \"inherit\",\n  }\n}\n\nconst convertSlate047 = (object) => {\n  const { nodes } = object.document\n\n  return nodes.map(convertNode)\n}\n\nexport default convertSlate047\n","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst defaultTheme = createMuiTheme({})\n\nexport default defaultTheme\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { createEditor, Descendant } from \"slate\"\nimport { Slate, Editable, withReact } from \"slate-react\"\nimport { withHistory } from \"slate-history\"\nimport { Theme, ThemeProvider } from \"@material-ui/core/styles\"\nimport Toolbar from \"./Toolbar\"\nimport InlineToolbar from \"./InlineToolbar\"\nimport Element from \"./Element\"\nimport Leaf from \"./Leaf\"\nimport withHTML from \"../plugins/withHTML\"\nimport withLinks from \"../plugins/withLinks\"\nimport withLists from \"../plugins/withLists\"\nimport withMedia from \"../plugins/withMedia\"\nimport withNormalize from \"../plugins/withNormalize\"\nimport onKeyDown from \"../utils/onKeyDown\"\nimport convertSlate047 from \"../utils/migration\"\nimport defaultTheme from \"../styles/theme\"\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [\n      {\n        fontFamily: \"Roboto\",\n        fontSize: \"inherit\",\n        fontColor: \"inherit\",\n        text: \"\",\n      },\n    ],\n  },\n]\n\ntype Props = {\n  /** Page content taken from JSON */\n  pageContent?: string\n  /** Whether the editor is in read-only mode or not */\n  readOnly: boolean\n  /** Material-UI theme */\n  theme?: Theme\n  /** Indicates if condensed (inline) toolbar should be shown */\n  inline?: boolean\n}\n\n/**\n * PageEditor is the main editor component.\n */\nconst PageEditor = ({\n  pageContent,\n  readOnly,\n  theme = defaultTheme,\n  inline,\n}: Props) => {\n  // create a slate editor object that won't change across renders\n  const editor = useMemo(\n    () =>\n      withHTML(\n        withHistory(\n          withReact(\n            withNormalize(withMedia(withLists(withLinks(createEditor())))),\n          ),\n        ),\n      ),\n    [],\n  )\n  let defaultValue = initialValue\n  if (pageContent) {\n    defaultValue = JSON.parse(pageContent)\n    if (!Array.isArray(defaultValue)) {\n      defaultValue = convertSlate047(defaultValue)\n    }\n  }\n\n  // store the value of the editor\n  const [value, setValue] = useState<Descendant[]>(defaultValue)\n  // render expected element based on type passed as props\n  // memoize this function for subsequent renders\n  const renderElement = useCallback((props) => <Element {...props} />, [])\n  // render expected leaf based on type (i.e. bold, italic, etc)\n  const renderLeaf = useCallback((props) => <Leaf {...props} />, [])\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    onKeyDown(event, editor)\n  }\n\n  let toolbar = inline ? <InlineToolbar /> : <Toolbar />\n  console.log(value)\n  return (\n    <ThemeProvider theme={theme}>\n      <Slate\n        editor={editor}\n        value={value}\n        onChange={(value) => setValue(value)}>\n        {!readOnly && toolbar}\n        <Editable\n          readOnly={readOnly}\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Enter some text...\"\n          spellCheck\n          autoFocus\n        />\n      </Slate>\n    </ThemeProvider>\n  )\n}\n\nexport default PageEditor\n"],"names":["useStyles","makeStyles","button","props","color","active","isMarkActive","editor","format","marks","Editor","toggleMark","isActive","removeMark","addMark","MarkButton","icon","useSlate","classes","handleMouseDown","event","preventDefault","React","Tooltip","title","IconButton","className","size","onMouseDown","types","bold","italic","underline","strikethrough","subscript","superscript","link","paragraph","h1","h2","h3","divider","lineSpacing","image","video","orderedList","unorderedList","listItem","indentDecrease","indentIncrease","tableWrap","table","tableRow","tableColumn","tableCell","tableDelete","tableRowDelete","tableColumnDelete","alignments","left","center","right","justify","attributes","borderColor","fontColor","isBlockActive","property","value","Array","from","nodes","match","n","isEditor","SlateElement","isElement","toggleBlock","Transforms","setNodes","type","BlockButton","clickFn","toggleAlign","align","AlignButton","textTransform","LinkDialog","handleAddClick","handleClose","dialogOpen","setLink","Dialog","open","onClose","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","defaultValue","url","onChange","e","target","text","fullWidth","DialogActions","Button","onClick","variant","linkNodeOptions","isLinkActive","upsertLink","unwrapNodes","linkData","children","selection","isCollapsed","Range","insertNodes","wrapNodes","split","insertText","collapse","edge","getLinkSelection","prevURL","selectedText","string","linkNode","useLinks","theme","useTheme","useState","linkDialogOpen","setLinkDialogOpen","handleAddLink","palette","primary","main","deselect","LinkButton","Fragment","useAnchorElement","anchorEl","setAnchorEl","currentTarget","_","reason","ids","pubmed","go","gene","strain","plasmid","idList","getURLPrefix","item","prefix","validateText","valid","test","AutolinkIDsButton","handleItemClick","alert","includes","Menu","Boolean","MenuListProps","disablePadding","map","index","MenuItem","key","getPresetColors","secondary","error","warning","info","success","buttonContainer","display","flexDirection","width","height","padding","spacing","cursor","input","marginTop","marginBottom","borderRadius","popper","ColorPicker","handleChange","activeColor","presetColors","HexColorPicker","HexColorInput","style","backgroundColor","getMarkValue","getCurrentMark","mark","FontColorButton","keepMounted","CheckIcon","SvgIcon","d","fill","FontFamilyList","FontSizeList","LineSpacingList","getParentNode","currentPath","anchor","path","parentPath","Path","parent","node","Node","get","menuItem","justifyContent","LineSpacingButton","handleMenuOpen","parentNode","currentLineSpacing","Element","ImageDialog","setImage","checked","setChecked","handleCheckboxChange","description","Number","FormControlLabel","control","Checkbox","name","linkURL","insertImage","imageData","ImageButton","imageDialogOpen","setImageDialogOpen","handleAddImage","VideoDialog","setVideo","youTubeRegex","vimeoRegex","getVideoID","length","addVideo","transformedURL","videoID","videoData","VideoButton","videoDialogOpen","setVideoDialogOpen","handleAddVideo","ScientificSymbolIcon","getSymbolsList","start","end","symbols","i","push","String","fromCharCode","grey","border","ScientificSymbolsButton","Popper","undefined","BoldIcon","ItalicIcon","StrikethroughIcon","SubscriptIcon","SuperscriptIcon","UnderlinedIcon","H1Icon","H2Icon","H3Icon","LinkIcon","DividerIcon","fillRule","x","y","LineSpacingIcon","ImageIcon","VideoIcon","UnorderedListIcon","OrderedListIcon","IndentIncreaseIcon","IndentDecreaseIcon","AlignLeftIcon","AlignCenterIcon","AlignRightIcon","AlignJustifyIcon","dropdown","marginLeft","marginRight","minWidth","Dropdown","values","FormControl","Select","val","FontColorIcon","toggleList","block","parentListMatch","listItemMatch","findMatchingList","listMatch","findMatchingListItem","setParagraphNode","liftNodes","handleLists","callback","Point","equals","withLists","insertBreak","deleteBackward","args","indentItem","mode","depth","undentItem","TableIcon","TableInsertColumnIcon","TableInsertRowIcon","TableDeleteColumnIcon","TableDeleteRowIcon","DeleteIcon","getNodeAbove","ancestor","above","getEmptyTableCell","getEmptyTableRow","count","getEmptyTable","row","col","insertTable","insertTableRow","currentRow","rowPath","tableNode","tablePath","at","next","insertTableColumn","currentCell","currentTable","cellPath","nextCellPath","newCellPath","slice","replacePathPos","currentRowIndex","forEach","select","deleteTable","tableMatch","removeNodes","deleteTableRow","deleteTableColumn","pathToDelete","tableButtons","TableButtons","separator","borderLeftColor","borderLeftStyle","borderLeftWidth","verticalAlign","Separator","container","toolbar","position","top","listButtons","EditorToolbar","AppBar","Toolbar","disableGutters","Grid","xs","InlineToolbar","textAlign","media","maxWidth","maxHeight","boxShadow","selected","focused","Image","element","useSelected","useFocused","styleProps","img","src","alt","contentEditable","href","Video","frameBorder","allowFullScreen","lineHeight","borderCollapse","Typography","Link","Divider","component","Table","TableBody","TableRow","TableCell","getFontSize","fontSize","fontFamily","Leaf","leaf","typography","elementTags","A","el","getAttribute","H1","H2","H3","IMG","LI","OL","UL","P","HR","BR","leafTags","DEL","EM","I","S","STRONG","B","U","SUB","SUP","deserialize","nodeType","textContent","nodeName","childNodes","flat","jsx","attrs","filter","child","withHTML","insertData","data","html","getData","parsed","DOMParser","parseFromString","fragment","body","insertFragment","withLinks","isInline","withMedia","isVoid","withNormalize","normalizeNode","onKeyDown","shiftKey","convertData","convertType","convertedType","convertChildren","reduce","acc","convertNode","isArray","alignmentTypes","marksReducer","fontFamilyIndex","fontSizeIndex","convertDataByType","leaves","allMarks","convertSlate047","object","document","defaultTheme","createMuiTheme","initialValue","PageEditor","pageContent","readOnly","inline","useMemo","withHistory","withReact","createEditor","JSON","parse","setValue","renderElement","useCallback","renderLeaf","handleKeyDown","console","log","ThemeProvider","Slate","Editable","placeholder","spellCheck"],"mappings":"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"}